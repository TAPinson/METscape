[{"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\index.js":"1","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\App.js":"2","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\UserProfileProvider.js":"5","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Register.js":"6","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Login.js":"7","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Home.js":"8","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\AppHeader.js":"9","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\PostProvider.js":"10","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\CategoryBrowser.js":"11","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\ExhibitProvider.js":"12","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\DepartmentFeed.js":"13","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ExhibitCard.js":"14","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\MyExhibits.js":"15"},{"size":690,"mtime":1611936739824,"results":"16","hashOfConfig":"17"},{"size":904,"mtime":1612045050380,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":2963,"mtime":1612294256647,"results":"20","hashOfConfig":"17"},{"size":5973,"mtime":1611943120819,"results":"21","hashOfConfig":"17"},{"size":6717,"mtime":1611956409876,"results":"22","hashOfConfig":"17"},{"size":2624,"mtime":1611943693723,"results":"23","hashOfConfig":"17"},{"size":587,"mtime":1612192084082,"results":"24","hashOfConfig":"17"},{"size":3679,"mtime":1612192619278,"results":"25","hashOfConfig":"17"},{"size":1545,"mtime":1612294694061,"results":"26","hashOfConfig":"17"},{"size":1090,"mtime":1612232999806,"results":"27","hashOfConfig":"17"},{"size":2770,"mtime":1612298697533,"results":"28","hashOfConfig":"17"},{"size":894,"mtime":1612281958523,"results":"29","hashOfConfig":"17"},{"size":2283,"mtime":1612301405337,"results":"30","hashOfConfig":"17"},{"size":1710,"mtime":1612302180313,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"hsmdj7",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"34"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"34"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"34"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\index.js",[],["69","70"],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\App.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ApplicationViews.js",["71"],"import React, { useContext } from 'react';\r\nimport { Switch, Route, Redirect } from 'react-router-dom';\r\nimport { UserProfileContext } from '../providers/UserProfileProvider';\r\nimport { PostContext, PostProvider } from \"../providers/PostProvider\"\r\nimport Home from '../pages/Home';\r\nimport Login from '../pages/Login';\r\nimport Register from '../pages/Register';\r\nimport { CategoryBrowser } from \"../pages/CategoryBrowser\"\r\nimport DepartmentFeed from '../pages/DepartmentFeed';\r\nimport { ExhibitProvider } from '../providers/ExhibitProvider';\r\nimport MyExhibits from '../pages/MyExhibits';\r\n\r\n\r\n\r\nconst ApplicationViews = () => {\r\n    const { isLoggedIn, isAdmin } = useContext(UserProfileContext);\r\n\r\n    const authLevel = () => {\r\n        if (isLoggedIn) {\r\n            return (\r\n                <>\r\n                    <PostProvider>\r\n                        <Route path=\"/categorybrowser\">\r\n                            <CategoryBrowser />\r\n                        </Route>\r\n                    </PostProvider>\r\n                    <PostProvider>\r\n                        <ExhibitProvider>\r\n                            <Route path=\"/departmentfeed/:departmentId\" exact>\r\n                                <DepartmentFeed />\r\n                            </Route>\r\n                        </ExhibitProvider>\r\n                    </PostProvider>\r\n                    <PostProvider>\r\n                        <ExhibitProvider>\r\n                            <Route path=\"/myexhibits\" exact>\r\n                                <MyExhibits />\r\n                            </Route>\r\n                        </ExhibitProvider>\r\n                    </PostProvider>\r\n                    {/* <UserProfileProvider>\r\n                        <Route path=\"/users\">\r\n                            <UserManager />\r\n                        </Route>\r\n                    </UserProfileProvider>\r\n                    <UserProfileProvider>\r\n                        <Route path=\"/deactive\">\r\n                            <DeactiveUserManager />\r\n                        </Route>\r\n                    </UserProfileProvider>\r\n                    <UserProfileProvider>\r\n                        <Route path=\"/unapprovedPosts\">\r\n                            <UnapprovedPosts />\r\n                        </Route>\r\n                    </UserProfileProvider> */}\r\n                </>\r\n            );\r\n        } else if (isLoggedIn && !isAdmin()) {\r\n            return <Redirect to=\"/\" />;\r\n        } else {\r\n            return <Redirect to=\"/login\" />;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact>\r\n                {isLoggedIn ? <Home /> : <Redirect to=\"/login\" />}\r\n            </Route>\r\n\r\n            <Route path=\"/login\">\r\n                <Login />\r\n            </Route>\r\n            <Route path=\"/register\">\r\n                <Register />\r\n            </Route>\r\n            {authLevel()}\r\n        </Switch>\r\n    );\r\n};\r\n\r\nexport default ApplicationViews;\r\n","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Register.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Login.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Home.js",["72","73"],"import React, { useEffect, useContext } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\n\r\nconst Home = () => {\r\n    const { getPostById, post } = useContext(PostContext);\r\n    const { getExhibitById, exhibit } = useContext(ExhibitContext);\r\n\r\n    useEffect(() => {\r\n        getPostById(2)\r\n        getExhibitById(436050)\r\n    }, []);\r\n\r\n    return (\r\n        <div >\r\n            {post.title} <br />\r\n            <img src={exhibit.primaryImage} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\AppHeader.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\PostProvider.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\CategoryBrowser.js",["74","75"],"import React, { useEffect, useContext } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\nimport './CategoryBrowser.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nexport const CategoryBrowser = () => {\r\n    const { departments, getAllDepartments } = useContext(ExhibitContext);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getAllDepartments()\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"departments-container\">\r\n            {departments.map((department) => {\r\n                return (\r\n                    <div className=\"department-card\"\r\n                        key={department.departmentId}\r\n                        onClick={() => {\r\n                            history.push(`/departmentfeed/${department.departmentId}`)\r\n                        }}>\r\n                        {department.displayName} - {department.departmentId}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryBrowser;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\ExhibitProvider.js",["76","77"],"import React, { useState, createContext } from \"react\";\r\n\r\n\r\nexport const ExhibitContext = createContext();\r\n\r\nexport function ExhibitProvider(props) {\r\n\r\n    const singleExhibitUrl = \"https://collectionapi.metmuseum.org/public/collection/v1/objects\";\r\n\r\n    const [exhibit, setExhibit] = useState([]);\r\n    const [exhibits, setExhibits] = useState([]);\r\n    const [departments, setDepartments] = useState([]);\r\n    const [department, setDepartment] = useState([]);\r\n\r\n    const getExhibitById = (id) => {\r\n        fetch(`${singleExhibitUrl}/${id}`)\r\n            .then((res) => res.json())\r\n            .then((resp) => setExhibit(resp))\r\n    }\r\n\r\n    const exhibitsCompiler = (id) => {\r\n        return fetch(`${singleExhibitUrl}/${id}`)\r\n            .then((res) => res.json())\r\n    }\r\n\r\n\r\n    const getAllDepartments = () => {\r\n        fetch(`https://collectionapi.metmuseum.org/public/collection/v1/departments`)\r\n            .then((res) => res.json())\r\n            .then((resp) => setDepartments(resp.departments))\r\n    }\r\n\r\n    const getExhibitsByDepartment = (id) => {\r\n        fetch(`https:/collectionapi.metmuseum.org/public/collection/v1/objects?departmentIds=${id}`)\r\n            .then((res) => res.json())\r\n            .then((resp) => {\r\n                let getTwenty = resp.objectIDs.slice(0, 20)\r\n                let retrievedObjects = []\r\n                setExhibits([])\r\n                getTwenty.map((metObj) => {\r\n                    exhibitsCompiler(metObj)\r\n                        .then((resp) => {\r\n                            if (!retrievedObjects.includes(resp)) {\r\n                                retrievedObjects.push(resp)\r\n                                setExhibits([...retrievedObjects])\r\n                            }\r\n                        })\r\n                })\r\n            })\r\n    }\r\n\r\n    const getPostExhibits = (posts) => {\r\n        //console.log(posts)\r\n        let retrievedObjects = []\r\n        posts.map((post) => {\r\n            exhibitsCompiler(post.metId)\r\n                .then((resp) => {\r\n                    retrievedObjects.push(resp)\r\n                    setExhibits([...retrievedObjects])\r\n                })\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <ExhibitContext.Provider\r\n            value={{\r\n                exhibit,\r\n                setExhibit,\r\n                getExhibitById,\r\n                getAllDepartments,\r\n                departments,\r\n                setDepartments,\r\n                department,\r\n                setDepartment,\r\n                getExhibitsByDepartment,\r\n                exhibits,\r\n                setExhibits,\r\n                exhibitsCompiler,\r\n                getPostExhibits\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ExhibitContext.Provider>\r\n    );\r\n}","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\DepartmentFeed.js",["78","79","80"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\nimport { useParams } from 'react-router-dom';\r\nimport ExhibitCard from \"../components/ExhibitCard\"\r\nimport \"./DepartmentFeed.css\"\r\n\r\nconst DepartmentFeed = () => {\r\n    const { getExhibitsByDepartment, exhibits } = useContext(ExhibitContext);\r\n    const { departmentId } = useParams();\r\n    const [postsToDisplay, setPostsToDisplay] = useState([])\r\n\r\n    useEffect(() => {\r\n        getExhibitsByDepartment(departmentId)\r\n    }, []);\r\n\r\n    return (\r\n        <div >\r\n            {\r\n                exhibits.map((exhibitObj) => {\r\n                    return (\r\n                        <ExhibitCard key={exhibitObj.objectID} exhibit={exhibitObj} />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DepartmentFeed;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ExhibitCard.js",["81","82","83"],"import React, { useState, createContext, useContext } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport \"./ExhibitCard.css\"\r\nimport Modal from 'react-modal'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ExhibitCard = ({ exhibit }) => {\r\n    const { addPost } = useContext(PostContext);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false)\r\n    Modal.setAppElement('#root')\r\n\r\n    let newPost = {}\r\n\r\n    const handleContentUpdate = (event) => {\r\n        newPost.metId = exhibit.objectID\r\n        newPost[event.target.id] = event.target.value\r\n    }\r\n\r\n    const postCreator = () => {\r\n        addPost(newPost)\r\n    }\r\n\r\n    return (\r\n        <div className=\"exhibit-card-container\">\r\n            <div className=\"exhibit-card\">\r\n                <h3> {exhibit.title} </h3>\r\n                <img src={exhibit.primaryImage} className=\"exhibit-card-image\" />\r\n                <div>\r\n                    From: {exhibit.country} <br />\r\n                    Department: {exhibit.department} <br />\r\n                    Dimensions: {exhibit.dimensions} <br />\r\n                    Medium: {exhibit.medium} <br />\r\n                    <div className=\"post-this-button\" onClick={() => setModalIsOpen(true)}>Post This</div>\r\n\r\n                    <Modal className=\"postModal\" isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\r\n                        <h2>Title</h2>\r\n                        <input type=\"text\" className=\"modalInput\" id=\"title\" onChange={handleContentUpdate} />\r\n\r\n                        <h2>Post Message</h2>\r\n                        <input type=\"text\" className=\"modalInput\" id=\"content\" onChange={handleContentUpdate} />\r\n\r\n                        <button onClick={evt => {\r\n                            evt.preventDefault()\r\n                            postCreator()\r\n                            setModalIsOpen(false)\r\n                        }}>Save\r\n                                    </button>\r\n                        <div>\r\n                            <button className=\"modalClose\" onClick={() => setModalIsOpen(false)}>Close</button>\r\n                        </div>\r\n                    </Modal>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExhibitCard;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\MyExhibits.js",["84"],{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":4,"column":10,"nodeType":"91","messageId":"92","endLine":4,"endColumn":21},{"ruleId":"93","severity":1,"message":"94","line":12,"column":8,"nodeType":"95","endLine":12,"endColumn":10,"suggestions":"96"},{"ruleId":"97","severity":1,"message":"98","line":17,"column":13,"nodeType":"99","endLine":17,"endColumn":47},{"ruleId":"89","severity":1,"message":"90","line":2,"column":10,"nodeType":"91","messageId":"92","endLine":2,"endColumn":21},{"ruleId":"93","severity":1,"message":"100","line":14,"column":8,"nodeType":"95","endLine":14,"endColumn":10,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":40,"column":40,"nodeType":"104","messageId":"105","endLine":40,"endColumn":42},{"ruleId":"102","severity":1,"message":"103","line":55,"column":26,"nodeType":"104","messageId":"105","endLine":55,"endColumn":28},{"ruleId":"89","severity":1,"message":"106","line":10,"column":12,"nodeType":"91","messageId":"92","endLine":10,"endColumn":26},{"ruleId":"89","severity":1,"message":"107","line":10,"column":28,"nodeType":"91","messageId":"92","endLine":10,"endColumn":45},{"ruleId":"93","severity":1,"message":"108","line":14,"column":8,"nodeType":"95","endLine":14,"endColumn":10,"suggestions":"109"},{"ruleId":"89","severity":1,"message":"110","line":1,"column":27,"nodeType":"91","messageId":"92","endLine":1,"endColumn":40},{"ruleId":"89","severity":1,"message":"111","line":5,"column":10,"nodeType":"91","messageId":"92","endLine":5,"endColumn":19},{"ruleId":"97","severity":1,"message":"98","line":27,"column":17,"nodeType":"99","endLine":27,"endColumn":82},{"ruleId":"93","severity":1,"message":"112","line":15,"column":8,"nodeType":"95","endLine":15,"endColumn":10,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'PostContext' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getExhibitById' and 'getPostById'. Either include them or remove the dependency array.","ArrayExpression",["116"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'getAllDepartments'. Either include it or remove the dependency array.",["117"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'postsToDisplay' is assigned a value but never used.","'setPostsToDisplay' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'departmentId' and 'getExhibitsByDepartment'. Either include them or remove the dependency array.",["118"],"'createContext' is defined but never used.","'useParams' is defined but never used.","React Hook useEffect has missing dependencies: 'getPostExhibits', 'getPostsByUser', 'posts', and 'userId'. Either include them or remove the dependency array.",["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [getExhibitById, getPostById]",{"range":"128","text":"129"},"Update the dependencies array to be: [getAllDepartments]",{"range":"130","text":"131"},"Update the dependencies array to be: [departmentId, getExhibitsByDepartment]",{"range":"132","text":"133"},"Update the dependencies array to be: [getPostExhibits, getPostsByUser, posts, userId]",{"range":"134","text":"135"},[418,420],"[getExhibitById, getPostById]",[474,476],"[getAllDepartments]",[557,559],"[departmentId, getExhibitsByDepartment]",[590,592],"[getPostExhibits, getPostsByUser, posts, userId]"]