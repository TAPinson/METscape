[{"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\index.js":"1","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\App.js":"2","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\UserProfileProvider.js":"5","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Register.js":"6","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Login.js":"7","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Home.js":"8","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\AppHeader.js":"9","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\PostProvider.js":"10","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\CategoryBrowser.js":"11","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\ExhibitProvider.js":"12","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\DepartmentFeed.js":"13","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ExhibitCard.js":"14","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\MyExhibits.js":"15","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\CommentProvider.js":"16","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\MyExhibitCard.js":"17","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\FriendManager.js":"18","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\FriendshipProvider.js":"19","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\MyFeed.js":"20"},{"size":690,"mtime":1611936739824,"results":"21","hashOfConfig":"22"},{"size":1035,"mtime":1612380137029,"results":"23","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"22"},{"size":3085,"mtime":1612471074415,"results":"25","hashOfConfig":"22"},{"size":5979,"mtime":1612387385470,"results":"26","hashOfConfig":"22"},{"size":6717,"mtime":1611956409876,"results":"27","hashOfConfig":"22"},{"size":2624,"mtime":1611943693723,"results":"28","hashOfConfig":"22"},{"size":616,"mtime":1612464499371,"results":"29","hashOfConfig":"22"},{"size":3679,"mtime":1612192619278,"results":"30","hashOfConfig":"22"},{"size":1869,"mtime":1612475135711,"results":"31","hashOfConfig":"22"},{"size":1034,"mtime":1612464431817,"results":"32","hashOfConfig":"22"},{"size":2740,"mtime":1612464377326,"results":"33","hashOfConfig":"22"},{"size":822,"mtime":1612464471564,"results":"34","hashOfConfig":"22"},{"size":2250,"mtime":1612464185750,"results":"35","hashOfConfig":"22"},{"size":3262,"mtime":1612470778655,"results":"36","hashOfConfig":"22"},{"size":1521,"mtime":1612468965358,"results":"37","hashOfConfig":"22"},{"size":725,"mtime":1612464119454,"results":"38","hashOfConfig":"22"},{"size":2553,"mtime":1612472268451,"results":"39","hashOfConfig":"22"},{"size":1513,"mtime":1612472453004,"results":"40","hashOfConfig":"22"},{"size":1606,"mtime":1612475098774,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"hsmdj7",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"44"},"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\index.js",[],["91","92"],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\App.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Register.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Login.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Home.js",["93"],"import React, { useEffect, useContext } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\n\r\nconst Home = () => {\r\n    const { getPostById, post } = useContext(PostContext);\r\n    const { getExhibitById, exhibit } = useContext(ExhibitContext);\r\n\r\n    useEffect(() => {\r\n        getPostById(2)\r\n        getExhibitById(436050)\r\n    }, []);\r\n\r\n    return (\r\n        <div >\r\n            {post.title} <br />\r\n            <img src={exhibit.primaryImage} alt=\"exhibit representation\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\AppHeader.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\PostProvider.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\CategoryBrowser.js",["94"],"import React, { useEffect, useContext } from \"react\";\r\n\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\nimport './CategoryBrowser.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nexport const CategoryBrowser = () => {\r\n    const { departments, getAllDepartments } = useContext(ExhibitContext);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getAllDepartments()\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"departments-container\">\r\n            {departments.map((department) => {\r\n                return (\r\n                    <div className=\"department-card\"\r\n                        key={department.departmentId}\r\n                        onClick={() => {\r\n                            history.push(`/departmentfeed/${department.departmentId}`)\r\n                        }}>\r\n                        {department.displayName} - {department.departmentId}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryBrowser;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\ExhibitProvider.js",["95","96"],"import React, { useState, createContext } from \"react\";\r\n\r\n\r\nexport const ExhibitContext = createContext();\r\n\r\nexport function ExhibitProvider(props) {\r\n\r\n    const singleExhibitUrl = \"https://collectionapi.metmuseum.org/public/collection/v1/objects\";\r\n\r\n    const [exhibit, setExhibit] = useState([]);\r\n    const [exhibits, setExhibits] = useState([]);\r\n    const [departments, setDepartments] = useState([]);\r\n    const [department, setDepartment] = useState([]);\r\n\r\n    const getExhibitById = (id) => {\r\n        fetch(`${singleExhibitUrl}/${id}`)\r\n            .then((res) => res.json())\r\n            .then((resp) => setExhibit(resp))\r\n    }\r\n\r\n    const exhibitsCompiler = (id) => {\r\n        return fetch(`${singleExhibitUrl}/${id}`)\r\n            .then((res) => res.json())\r\n    }\r\n\r\n\r\n    const getAllDepartments = () => {\r\n        fetch(`https://collectionapi.metmuseum.org/public/collection/v1/departments`)\r\n            .then((res) => res.json())\r\n            .then((resp) => setDepartments(resp.departments))\r\n    }\r\n\r\n    const getExhibitsByDepartment = (id) => {\r\n        fetch(`https:/collectionapi.metmuseum.org/public/collection/v1/objects?departmentIds=${id}`)\r\n            .then((res) => res.json())\r\n            .then((resp) => {\r\n                let getTwenty = resp.objectIDs.slice(0, 20)\r\n                let retrievedObjects = []\r\n                setExhibits([])\r\n                getTwenty.map((metObj) => {\r\n                    exhibitsCompiler(metObj)\r\n                        .then((resp) => {\r\n                            if (!retrievedObjects.includes(resp)) {\r\n                                retrievedObjects.push(resp)\r\n                                setExhibits([...retrievedObjects])\r\n                            }\r\n                        })\r\n                })\r\n            })\r\n    }\r\n\r\n    const getPostExhibits = (posts) => {\r\n        let retrievedObjects = []\r\n        posts.map((post) => {\r\n            exhibitsCompiler(post.metId)\r\n                .then((resp) => {\r\n                    retrievedObjects.push(resp)\r\n                    setExhibits([...retrievedObjects])\r\n                })\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <ExhibitContext.Provider\r\n            value={{\r\n                exhibit,\r\n                setExhibit,\r\n                getExhibitById,\r\n                getAllDepartments,\r\n                departments,\r\n                setDepartments,\r\n                department,\r\n                setDepartment,\r\n                getExhibitsByDepartment,\r\n                exhibits,\r\n                setExhibits,\r\n                exhibitsCompiler,\r\n                getPostExhibits\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ExhibitContext.Provider>\r\n    );\r\n}","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\DepartmentFeed.js",["97"],"import React, { useEffect, useContext } from \"react\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\nimport { useParams } from 'react-router-dom';\r\nimport ExhibitCard from \"../components/ExhibitCard\"\r\nimport \"./DepartmentFeed.css\"\r\n\r\nconst DepartmentFeed = () => {\r\n    const { getExhibitsByDepartment, exhibits } = useContext(ExhibitContext);\r\n    const { departmentId } = useParams();\r\n\r\n    useEffect(() => {\r\n        getExhibitsByDepartment(departmentId)\r\n    }, []);\r\n\r\n    return (\r\n        <div >\r\n            {\r\n                exhibits.map((exhibitObj) => {\r\n                    return (\r\n                        <ExhibitCard key={exhibitObj.objectID} exhibit={exhibitObj} />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DepartmentFeed;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ExhibitCard.js",[],["98","99"],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\MyExhibits.js",["100","101","102","103"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport { CommentContext } from \"../providers/CommentProvider\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\nimport MyExhibitCard from \"../components/MyExhibitCard\"\r\nimport \"./MyExhibits.css\"\r\n\r\n\r\nconst MyExhibits = () => {\r\n    const { posts, getPostsByUser } = useContext(PostContext);\r\n    const { exhibits, getPostExhibits } = useContext(ExhibitContext);\r\n    const { addComment, getCommentsByPost } = useContext(CommentContext);\r\n    const userId = JSON.parse(localStorage.getItem('userProfile')).id;\r\n\r\n    useEffect(() => {\r\n        getPostsByUser(userId)\r\n            .then((postResponse) => {\r\n                getPostExhibits(postResponse)\r\n            })\r\n    }, []);\r\n\r\n    const PostTitle = (objectID) => {\r\n        const linkedTitle = posts.find((post) => {\r\n            return post.metId === objectID.objectID\r\n        })\r\n        return linkedTitle.title\r\n    }\r\n\r\n    const InitialComment = (objectID) => {\r\n        const linkedContent = posts.find((post) => {\r\n            return post.metId === objectID.objectID\r\n        })\r\n        return (\r\n            <div className=\"initial-comment\">{linkedContent.content}</div>\r\n        )\r\n    }\r\n\r\n    let newComment = {}\r\n\r\n    const handleContentUpdate = (event) => {\r\n        newComment[event.target.name] = event.target.value\r\n    }\r\n\r\n    const commentCreator = (objectID) => {\r\n        const linkedContent = posts.find((post) => {\r\n            return post.metId === objectID.objectID\r\n        })\r\n        newComment.postId = linkedContent.id\r\n        addComment(newComment)\r\n    }\r\n\r\n    const CommentContainer = (objectID) => {\r\n        return (\r\n            <section className=\"new-comment-container\">\r\n                <input className=\"comment-input\" type=\"text\" name=\"content\" onChange={handleContentUpdate} />\r\n                <div className=\"submit-new-comment-button\" onClick={() => commentCreator(objectID)}>Submit Comment</div>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    const UserComments = (objectID) => {\r\n\r\n        const linkedContent = posts.find((post) => {\r\n            return post.metId === objectID.objectID\r\n        })\r\n\r\n        const postId = linkedContent.id\r\n\r\n        // let postComments = []\r\n\r\n        // getCommentsByPost(postId)\r\n        //     .then((res) => {\r\n        //         postComments.push(res)\r\n        //         console.log(postComments)\r\n        //     })\r\n\r\n        return <div className=\"initial-comment\">COMMENTS SECTION</div>\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div >\r\n            {exhibits.map((exhibit) => {\r\n                return (\r\n                    <div key={exhibit.objectID} className=\"my-exhibits-container\">\r\n                        <h2><PostTitle objectID={exhibit.objectID} /></h2>\r\n                        <MyExhibitCard exhibit={exhibit} />\r\n                        <InitialComment objectID={exhibit.objectID} />\r\n                        <UserComments objectID={exhibit.objectID} />\r\n\r\n\r\n                        <CommentContainer objectID={exhibit.objectID} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyExhibits;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\CommentProvider.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\MyExhibitCard.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\FriendManager.js",["104"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { FriendshipContext } from \"../providers/FriendshipProvider\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport \"./FriendManager.css\"\r\n\r\nconst FriendManager = () => {\r\n    const { getAllUserProfiles, users } = useContext(UserProfileContext);\r\n    const { addFriendship, getUserFriends, friends, deleteFriendship } = useContext(FriendshipContext);\r\n    const userId = JSON.parse(localStorage.getItem('userProfile')).id;\r\n    const [toggler, setToggler] = useState(0)\r\n    useEffect(() => {\r\n        getUserFriends(userId)\r\n        getAllUserProfiles()\r\n    }, [toggler]);\r\n\r\n    const createFriendship = (id) => {\r\n        const newFriend = {\r\n            approverId: id,\r\n            isApproved: 1\r\n        }\r\n        addFriendship(newFriend)\r\n        const toggle = toggler + 1\r\n        setToggler(toggle)\r\n    }\r\n\r\n    const removeFriend = (id) => {\r\n        deleteFriendship(id)\r\n        const toggle = toggler + 1\r\n        setToggler(toggle)\r\n\r\n    }\r\n\r\n    const AddFriendButton = (user) => {\r\n        for (const buddy of friends) {\r\n            if (buddy.approverId === user.user.id || buddy.initiatorId === user.user.id) {\r\n                return (\r\n                    <div className=\"add-friend-button\"\r\n                        onClick={() => {\r\n                            removeFriend(buddy.id)\r\n                        }}>\r\n                        ❌\r\n                    </div>\r\n\r\n                )\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"add-friend-button\"\r\n                onClick={() => {\r\n                    createFriendship(user.user.id)\r\n                }}>\r\n                ➕\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Users</h2>\r\n            <div className=\"user-card-container\">\r\n                {users.map((user) => {\r\n                    if (user.id === userId) {\r\n                        return null\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div className=\"userprofile-card\" key={user.id}>\r\n                                <div>{user.firstName} {user.lastName}</div>\r\n                                <div>{user.userName}</div>\r\n                                <AddFriendButton user={user} />\r\n                            </div>\r\n                        )\r\n                    }\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FriendManager;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\FriendshipProvider.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\MyFeed.js",["105","106","107","108","109","110","111","112","113"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\nimport { FriendshipContext } from \"../providers/FriendshipProvider\"\r\nimport { CommentContext } from \"../providers/CommentProvider\"\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\"\r\n\r\nconst Home = () => {\r\n    const userId = JSON.parse(localStorage.getItem('userProfile')).id;\r\n    const { getPostById, posts, setPosts, getPostsByFriend } = useContext(PostContext);\r\n    const { getExhibitById, exhibit } = useContext(ExhibitContext);\r\n    const { getUserFriends, friends, setFriends } = useContext(FriendshipContext)\r\n\r\n    let friendPosts = []\r\n\r\n    useEffect(() => {\r\n        getUserFriends(userId)\r\n            .then(() => {\r\n                friends.map((buddy) => {\r\n                    getPostsByFriend(buddy.approverId)\r\n                        .then((res) => {\r\n                            res.map((each) => friendPosts.push(each))\r\n                            console.log(friendPosts)\r\n                            setPosts(friendPosts)\r\n                        })\r\n                })\r\n            })\r\n    }, []);\r\n\r\n    return (\r\n        <div >\r\n            <h2>Friends</h2>\r\n            {friends.map((buddy) => {\r\n                return <div key={buddy.id}>{buddy.id}</div>\r\n            })}\r\n            <h2>Posts</h2>\r\n            {posts.map((post) => {\r\n                return <div key={post.id}>{post.title}</div>\r\n            })}\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;",{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":12,"column":8,"nodeType":"120","endLine":12,"endColumn":10,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"122","line":14,"column":8,"nodeType":"120","endLine":14,"endColumn":10,"suggestions":"123"},{"ruleId":"124","severity":1,"message":"125","line":40,"column":40,"nodeType":"126","messageId":"127","endLine":40,"endColumn":42},{"ruleId":"124","severity":1,"message":"125","line":54,"column":26,"nodeType":"126","messageId":"127","endLine":54,"endColumn":28},{"ruleId":"118","severity":1,"message":"128","line":13,"column":8,"nodeType":"120","endLine":13,"endColumn":10,"suggestions":"129"},{"ruleId":"114","replacedBy":"130"},{"ruleId":"116","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":1,"column":40,"nodeType":"134","messageId":"135","endLine":1,"endColumn":48},{"ruleId":"132","severity":1,"message":"136","line":12,"column":25,"nodeType":"134","messageId":"135","endLine":12,"endColumn":42},{"ruleId":"118","severity":1,"message":"137","line":20,"column":8,"nodeType":"120","endLine":20,"endColumn":10,"suggestions":"138"},{"ruleId":"132","severity":1,"message":"139","line":67,"column":15,"nodeType":"134","messageId":"135","endLine":67,"endColumn":21},{"ruleId":"118","severity":1,"message":"140","line":14,"column":8,"nodeType":"120","endLine":14,"endColumn":17,"suggestions":"141"},{"ruleId":"132","severity":1,"message":"133","line":1,"column":40,"nodeType":"134","messageId":"135","endLine":1,"endColumn":48},{"ruleId":"132","severity":1,"message":"142","line":5,"column":10,"nodeType":"134","messageId":"135","endLine":5,"endColumn":24},{"ruleId":"132","severity":1,"message":"143","line":6,"column":10,"nodeType":"134","messageId":"135","endLine":6,"endColumn":28},{"ruleId":"132","severity":1,"message":"144","line":10,"column":13,"nodeType":"134","messageId":"135","endLine":10,"endColumn":24},{"ruleId":"132","severity":1,"message":"145","line":11,"column":13,"nodeType":"134","messageId":"135","endLine":11,"endColumn":27},{"ruleId":"132","severity":1,"message":"146","line":11,"column":29,"nodeType":"134","messageId":"135","endLine":11,"endColumn":36},{"ruleId":"132","severity":1,"message":"147","line":12,"column":38,"nodeType":"134","messageId":"135","endLine":12,"endColumn":48},{"ruleId":"124","severity":1,"message":"125","line":19,"column":37,"nodeType":"126","messageId":"127","endLine":19,"endColumn":39},{"ruleId":"118","severity":1,"message":"148","line":28,"column":8,"nodeType":"120","endLine":28,"endColumn":10,"suggestions":"149"},"no-native-reassign",["150"],"no-negated-in-lhs",["151"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getExhibitById' and 'getPostById'. Either include them or remove the dependency array.","ArrayExpression",["152"],"React Hook useEffect has a missing dependency: 'getAllDepartments'. Either include it or remove the dependency array.",["153"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'departmentId' and 'getExhibitsByDepartment'. Either include them or remove the dependency array.",["154"],["150"],["151"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'getCommentsByPost' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getPostExhibits', 'getPostsByUser', and 'userId'. Either include them or remove the dependency array.",["155"],"'postId' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getAllUserProfiles', 'getUserFriends', and 'userId'. Either include them or remove the dependency array.",["156"],"'CommentContext' is defined but never used.","'UserProfileContext' is defined but never used.","'getPostById' is assigned a value but never used.","'getExhibitById' is assigned a value but never used.","'exhibit' is assigned a value but never used.","'setFriends' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'friendPosts', 'friends', 'getPostsByFriend', 'getUserFriends', 'setPosts', and 'userId'. Either include them or remove the dependency array.",["157"],"no-global-assign","no-unsafe-negation",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"162","fix":"163"},{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},"Update the dependencies array to be: [getExhibitById, getPostById]",{"range":"170","text":"171"},"Update the dependencies array to be: [getAllDepartments]",{"range":"172","text":"173"},"Update the dependencies array to be: [departmentId, getExhibitsByDepartment]",{"range":"174","text":"175"},"Update the dependencies array to be: [getPostExhibits, getPostsByUser, userId]",{"range":"176","text":"177"},"Update the dependencies array to be: [getAllUserProfiles, getUserFriends, toggler, userId]",{"range":"178","text":"179"},"Update the dependencies array to be: [friendPosts, friends, getPostsByFriend, getUserFriends, setPosts, userId]",{"range":"180","text":"181"},[418,420],"[getExhibitById, getPostById]",[418,420],"[getAllDepartments]",[485,487],"[departmentId, getExhibitsByDepartment]",[815,817],"[getPostExhibits, getPostsByUser, userId]",[661,670],"[getAllUserProfiles, getUserFriends, toggler, userId]",[1226,1228],"[friendPosts, friends, getPostsByFriend, getUserFriends, setPosts, userId]"]