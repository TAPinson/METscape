[{"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\index.js":"1","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\App.js":"2","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\UserProfileProvider.js":"5","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Register.js":"6","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Login.js":"7","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Home.js":"8","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\AppHeader.js":"9","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\PostProvider.js":"10","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\CategoryBrowser.js":"11","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\ExhibitProvider.js":"12","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\DepartmentFeed.js":"13","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ExhibitCard.js":"14","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\MyExhibits.js":"15","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\CommentProvider.js":"16","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\MyExhibitCard.js":"17","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\FriendManager.js":"18"},{"size":690,"mtime":1611936739824,"results":"19","hashOfConfig":"20"},{"size":1035,"mtime":1612380137029,"results":"21","hashOfConfig":"20"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"20"},{"size":2552,"mtime":1612388072153,"results":"23","hashOfConfig":"20"},{"size":5979,"mtime":1612387385470,"results":"24","hashOfConfig":"20"},{"size":6717,"mtime":1611956409876,"results":"25","hashOfConfig":"20"},{"size":2624,"mtime":1611943693723,"results":"26","hashOfConfig":"20"},{"size":587,"mtime":1612192084082,"results":"27","hashOfConfig":"20"},{"size":3679,"mtime":1612192619278,"results":"28","hashOfConfig":"20"},{"size":1586,"mtime":1612372630360,"results":"29","hashOfConfig":"20"},{"size":1090,"mtime":1612232999806,"results":"30","hashOfConfig":"20"},{"size":2770,"mtime":1612298697533,"results":"31","hashOfConfig":"20"},{"size":832,"mtime":1612379254598,"results":"32","hashOfConfig":"20"},{"size":2283,"mtime":1612301405337,"results":"33","hashOfConfig":"20"},{"size":2768,"mtime":1612384827819,"results":"34","hashOfConfig":"20"},{"size":1563,"mtime":1612371810128,"results":"35","hashOfConfig":"20"},{"size":871,"mtime":1612379774085,"results":"36","hashOfConfig":"20"},{"size":830,"mtime":1612387769911,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"hsmdj7",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"40"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\index.js",[],["82","83"],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\App.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Register.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Login.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Home.js",["84","85"],"import React, { useEffect, useContext } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\n\r\nconst Home = () => {\r\n    const { getPostById, post } = useContext(PostContext);\r\n    const { getExhibitById, exhibit } = useContext(ExhibitContext);\r\n\r\n    useEffect(() => {\r\n        getPostById(2)\r\n        getExhibitById(436050)\r\n    }, []);\r\n\r\n    return (\r\n        <div >\r\n            {post.title} <br />\r\n            <img src={exhibit.primaryImage} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\AppHeader.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\PostProvider.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\CategoryBrowser.js",["86","87"],"import React, { useEffect, useContext } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\nimport './CategoryBrowser.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nexport const CategoryBrowser = () => {\r\n    const { departments, getAllDepartments } = useContext(ExhibitContext);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getAllDepartments()\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"departments-container\">\r\n            {departments.map((department) => {\r\n                return (\r\n                    <div className=\"department-card\"\r\n                        key={department.departmentId}\r\n                        onClick={() => {\r\n                            history.push(`/departmentfeed/${department.departmentId}`)\r\n                        }}>\r\n                        {department.displayName} - {department.departmentId}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryBrowser;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\ExhibitProvider.js",["88","89"],"import React, { useState, createContext } from \"react\";\r\n\r\n\r\nexport const ExhibitContext = createContext();\r\n\r\nexport function ExhibitProvider(props) {\r\n\r\n    const singleExhibitUrl = \"https://collectionapi.metmuseum.org/public/collection/v1/objects\";\r\n\r\n    const [exhibit, setExhibit] = useState([]);\r\n    const [exhibits, setExhibits] = useState([]);\r\n    const [departments, setDepartments] = useState([]);\r\n    const [department, setDepartment] = useState([]);\r\n\r\n    const getExhibitById = (id) => {\r\n        fetch(`${singleExhibitUrl}/${id}`)\r\n            .then((res) => res.json())\r\n            .then((resp) => setExhibit(resp))\r\n    }\r\n\r\n    const exhibitsCompiler = (id) => {\r\n        return fetch(`${singleExhibitUrl}/${id}`)\r\n            .then((res) => res.json())\r\n    }\r\n\r\n\r\n    const getAllDepartments = () => {\r\n        fetch(`https://collectionapi.metmuseum.org/public/collection/v1/departments`)\r\n            .then((res) => res.json())\r\n            .then((resp) => setDepartments(resp.departments))\r\n    }\r\n\r\n    const getExhibitsByDepartment = (id) => {\r\n        fetch(`https:/collectionapi.metmuseum.org/public/collection/v1/objects?departmentIds=${id}`)\r\n            .then((res) => res.json())\r\n            .then((resp) => {\r\n                let getTwenty = resp.objectIDs.slice(0, 20)\r\n                let retrievedObjects = []\r\n                setExhibits([])\r\n                getTwenty.map((metObj) => {\r\n                    exhibitsCompiler(metObj)\r\n                        .then((resp) => {\r\n                            if (!retrievedObjects.includes(resp)) {\r\n                                retrievedObjects.push(resp)\r\n                                setExhibits([...retrievedObjects])\r\n                            }\r\n                        })\r\n                })\r\n            })\r\n    }\r\n\r\n    const getPostExhibits = (posts) => {\r\n        //console.log(posts)\r\n        let retrievedObjects = []\r\n        posts.map((post) => {\r\n            exhibitsCompiler(post.metId)\r\n                .then((resp) => {\r\n                    retrievedObjects.push(resp)\r\n                    setExhibits([...retrievedObjects])\r\n                })\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <ExhibitContext.Provider\r\n            value={{\r\n                exhibit,\r\n                setExhibit,\r\n                getExhibitById,\r\n                getAllDepartments,\r\n                departments,\r\n                setDepartments,\r\n                department,\r\n                setDepartment,\r\n                getExhibitsByDepartment,\r\n                exhibits,\r\n                setExhibits,\r\n                exhibitsCompiler,\r\n                getPostExhibits\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ExhibitContext.Provider>\r\n    );\r\n}","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\DepartmentFeed.js",["90","91"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\nimport { useParams } from 'react-router-dom';\r\nimport ExhibitCard from \"../components/ExhibitCard\"\r\nimport \"./DepartmentFeed.css\"\r\n\r\nconst DepartmentFeed = () => {\r\n    const { getExhibitsByDepartment, exhibits } = useContext(ExhibitContext);\r\n    const { departmentId } = useParams();\r\n\r\n    useEffect(() => {\r\n        getExhibitsByDepartment(departmentId)\r\n    }, []);\r\n\r\n    return (\r\n        <div >\r\n            {\r\n                exhibits.map((exhibitObj) => {\r\n                    return (\r\n                        <ExhibitCard key={exhibitObj.objectID} exhibit={exhibitObj} />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DepartmentFeed;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ExhibitCard.js",["92","93","94"],"import React, { useState, createContext, useContext } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport \"./ExhibitCard.css\"\r\nimport Modal from 'react-modal'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ExhibitCard = ({ exhibit }) => {\r\n    const { addPost } = useContext(PostContext);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false)\r\n    Modal.setAppElement('#root')\r\n\r\n    let newPost = {}\r\n\r\n    const handleContentUpdate = (event) => {\r\n        newPost.metId = exhibit.objectID\r\n        newPost[event.target.id] = event.target.value\r\n    }\r\n\r\n    const postCreator = () => {\r\n        addPost(newPost)\r\n    }\r\n\r\n    return (\r\n        <div className=\"exhibit-card-container\">\r\n            <div className=\"exhibit-card\">\r\n                <h3> {exhibit.title} </h3>\r\n                <img src={exhibit.primaryImage} className=\"exhibit-card-image\" />\r\n                <div>\r\n                    From: {exhibit.country} <br />\r\n                    Department: {exhibit.department} <br />\r\n                    Dimensions: {exhibit.dimensions} <br />\r\n                    Medium: {exhibit.medium} <br />\r\n                    <div className=\"post-this-button\" onClick={() => setModalIsOpen(true)}>Post This</div>\r\n\r\n                    <Modal className=\"postModal\" isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\r\n                        <h2>Title</h2>\r\n                        <input type=\"text\" className=\"modalInput\" id=\"title\" onChange={handleContentUpdate} />\r\n\r\n                        <h2>Post Message</h2>\r\n                        <input type=\"text\" className=\"modalInput\" id=\"content\" onChange={handleContentUpdate} />\r\n\r\n                        <button onClick={evt => {\r\n                            evt.preventDefault()\r\n                            postCreator()\r\n                            setModalIsOpen(false)\r\n                        }}>Save\r\n                                    </button>\r\n                        <div>\r\n                            <button className=\"modalClose\" onClick={() => setModalIsOpen(false)}>Close</button>\r\n                        </div>\r\n                    </Modal>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExhibitCard;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\MyExhibits.js",["95","96"],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\CommentProvider.js",["97"],"import React, { useState, createContext } from \"react\";\r\n\r\nexport const CommentContext = createContext();\r\n\r\nexport function CommentProvider(props) {\r\n\r\n    const apiUrl = \"/api/comment\";\r\n\r\n    const [comments, setComments] = useState([]);\r\n    const [comment, setComment] = useState([]);\r\n\r\n    const getCommentById = (id) => {\r\n        // fetch(`${apiUrl}/${id}`)\r\n        //     .then((res) => res.json())\r\n        //     .then((resp) => setPost(resp))\r\n    }\r\n\r\n    const getCommentsByPost = (id) => {\r\n        fetch(`${apiUrl}/bypost/${id}`)\r\n            .then((res) => res.json())\r\n            .then((resp) => setComments(resp))\r\n    }\r\n\r\n    // const getPostsByUser = (id) => {\r\n    //     fetch(`${apiUrl}/userposts/${id}`)\r\n    //         .then((res) => res.json())\r\n    //         .then((resp) => setPosts(resp))\r\n    // }\r\n\r\n    const addComment = (comment) => {\r\n        const userId = JSON.parse(localStorage.getItem('userProfile')).id;\r\n        comment.userProfileId = userId\r\n        return fetch(`${apiUrl}`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify(comment)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <CommentContext.Provider\r\n            value={{\r\n                getCommentById,\r\n                comment,\r\n                setComment,\r\n                setComments,\r\n                comments,\r\n                addComment\r\n            }}\r\n        >\r\n            {props.children}\r\n        </CommentContext.Provider>\r\n    );\r\n}","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\MyExhibitCard.js",["98","99","100","101","102","103","104"],"import React, { useState, createContext, useContext } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport \"./ExhibitCard.css\"\r\nimport Modal from 'react-modal'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst MyExhibitCard = ({ exhibit }) => {\r\n\r\n    return (\r\n        <div className=\"exhibit-card-container\">\r\n            <div className=\"exhibit-card\">\r\n                <h3> {exhibit.title} </h3>\r\n                <img src={exhibit.primaryImage} className=\"exhibit-card-image\" />\r\n                <div>\r\n                    From: {exhibit.country} <br />\r\n                    Department: {exhibit.department} <br />\r\n                    Dimensions: {exhibit.dimensions} <br />\r\n                    Medium: {exhibit.medium} <br />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyExhibitCard;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\FriendManager.js",["105","106","107"],{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","severity":1,"message":"113","line":12,"column":8,"nodeType":"114","endLine":12,"endColumn":10,"suggestions":"115"},{"ruleId":"116","severity":1,"message":"117","line":17,"column":13,"nodeType":"118","endLine":17,"endColumn":47},{"ruleId":"119","severity":1,"message":"120","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":21},{"ruleId":"112","severity":1,"message":"123","line":14,"column":8,"nodeType":"114","endLine":14,"endColumn":10,"suggestions":"124"},{"ruleId":"125","severity":1,"message":"126","line":40,"column":40,"nodeType":"127","messageId":"128","endLine":40,"endColumn":42},{"ruleId":"125","severity":1,"message":"126","line":55,"column":26,"nodeType":"127","messageId":"128","endLine":55,"endColumn":28},{"ruleId":"119","severity":1,"message":"129","line":1,"column":40,"nodeType":"121","messageId":"122","endLine":1,"endColumn":48},{"ruleId":"112","severity":1,"message":"130","line":13,"column":8,"nodeType":"114","endLine":13,"endColumn":10,"suggestions":"131"},{"ruleId":"119","severity":1,"message":"132","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":40},{"ruleId":"119","severity":1,"message":"133","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":27,"column":17,"nodeType":"118","endLine":27,"endColumn":82},{"ruleId":"119","severity":1,"message":"129","line":1,"column":40,"nodeType":"121","messageId":"122","endLine":1,"endColumn":48},{"ruleId":"112","severity":1,"message":"134","line":20,"column":8,"nodeType":"114","endLine":20,"endColumn":10,"suggestions":"135"},{"ruleId":"119","severity":1,"message":"136","line":18,"column":11,"nodeType":"121","messageId":"122","endLine":18,"endColumn":28},{"ruleId":"119","severity":1,"message":"129","line":1,"column":17,"nodeType":"121","messageId":"122","endLine":1,"endColumn":25},{"ruleId":"119","severity":1,"message":"132","line":1,"column":27,"nodeType":"121","messageId":"122","endLine":1,"endColumn":40},{"ruleId":"119","severity":1,"message":"137","line":1,"column":42,"nodeType":"121","messageId":"122","endLine":1,"endColumn":52},{"ruleId":"119","severity":1,"message":"120","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":21},{"ruleId":"119","severity":1,"message":"138","line":4,"column":8,"nodeType":"121","messageId":"122","endLine":4,"endColumn":13},{"ruleId":"119","severity":1,"message":"133","line":5,"column":10,"nodeType":"121","messageId":"122","endLine":5,"endColumn":19},{"ruleId":"116","severity":1,"message":"117","line":13,"column":17,"nodeType":"118","endLine":13,"endColumn":82},{"ruleId":"119","severity":1,"message":"120","line":2,"column":10,"nodeType":"121","messageId":"122","endLine":2,"endColumn":21},{"ruleId":"119","severity":1,"message":"139","line":3,"column":10,"nodeType":"121","messageId":"122","endLine":3,"endColumn":24},{"ruleId":"112","severity":1,"message":"140","line":13,"column":8,"nodeType":"114","endLine":13,"endColumn":10,"suggestions":"141"},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getExhibitById' and 'getPostById'. Either include them or remove the dependency array.","ArrayExpression",["144"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'PostContext' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getAllDepartments'. Either include it or remove the dependency array.",["145"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'departmentId' and 'getExhibitsByDepartment'. Either include them or remove the dependency array.",["146"],"'createContext' is defined but never used.","'useParams' is defined but never used.","React Hook useEffect has missing dependencies: 'getPostExhibits', 'getPostsByUser', and 'userId'. Either include them or remove the dependency array.",["147"],"'getCommentsByPost' is assigned a value but never used.","'useContext' is defined but never used.","'Modal' is defined but never used.","'ExhibitContext' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllUserProfiles'. Either include it or remove the dependency array.",["148"],"no-global-assign","no-unsafe-negation",{"desc":"149","fix":"150"},{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [getExhibitById, getPostById]",{"range":"159","text":"160"},"Update the dependencies array to be: [getAllDepartments]",{"range":"161","text":"162"},"Update the dependencies array to be: [departmentId, getExhibitsByDepartment]",{"range":"163","text":"164"},"Update the dependencies array to be: [getPostExhibits, getPostsByUser, userId]",{"range":"165","text":"166"},"Update the dependencies array to be: [getAllUserProfiles]",{"range":"167","text":"168"},[418,420],"[getExhibitById, getPostById]",[474,476],"[getAllDepartments]",[495,497],"[departmentId, getExhibitsByDepartment]",[796,798],"[getPostExhibits, getPostsByUser, userId]",[451,453],"[getAllUserProfiles]"]