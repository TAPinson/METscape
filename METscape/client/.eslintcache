[{"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\index.js":"1","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\App.js":"2","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\UserProfileProvider.js":"5","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Register.js":"6","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Login.js":"7","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Home.js":"8","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\AppHeader.js":"9","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\PostProvider.js":"10","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\CategoryBrowser.js":"11","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\ExhibitProvider.js":"12","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\DepartmentFeed.js":"13","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ExhibitCard.js":"14","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\MyExhibits.js":"15","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\CommentProvider.js":"16","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\MyExhibitCard.js":"17","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\FriendManager.js":"18","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\FriendshipProvider.js":"19","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\MyFeed.js":"20","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\FeedExhibitCard.js":"21","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\CommentEditor.js":"22","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\PostEditor.js":"23"},{"size":690,"mtime":1611936739824,"results":"24","hashOfConfig":"25"},{"size":1035,"mtime":1612380137029,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"27","hashOfConfig":"25"},{"size":3085,"mtime":1612471074415,"results":"28","hashOfConfig":"25"},{"size":5977,"mtime":1612830165874,"results":"29","hashOfConfig":"25"},{"size":6717,"mtime":1611956409876,"results":"30","hashOfConfig":"25"},{"size":2624,"mtime":1611943693723,"results":"31","hashOfConfig":"25"},{"size":1586,"mtime":1612971916597,"results":"32","hashOfConfig":"25"},{"size":3665,"mtime":1612905749207,"results":"33","hashOfConfig":"25"},{"size":3112,"mtime":1612820776338,"results":"34","hashOfConfig":"25"},{"size":1021,"mtime":1612890574877,"results":"35","hashOfConfig":"25"},{"size":4348,"mtime":1612970905648,"results":"36","hashOfConfig":"25"},{"size":1160,"mtime":1612909552982,"results":"37","hashOfConfig":"25"},{"size":2782,"mtime":1612970812570,"results":"38","hashOfConfig":"25"},{"size":1595,"mtime":1612904104148,"results":"39","hashOfConfig":"25"},{"size":2725,"mtime":1612829934347,"results":"40","hashOfConfig":"25"},{"size":4742,"mtime":1612907000928,"results":"41","hashOfConfig":"25"},{"size":2584,"mtime":1612886816888,"results":"42","hashOfConfig":"25"},{"size":2184,"mtime":1612821301035,"results":"43","hashOfConfig":"25"},{"size":1422,"mtime":1612971163607,"results":"44","hashOfConfig":"25"},{"size":5939,"mtime":1612971257814,"results":"45","hashOfConfig":"25"},{"size":2019,"mtime":1612902737209,"results":"46","hashOfConfig":"25"},{"size":2081,"mtime":1612904222277,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"hsmdj7",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"50"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\index.js",[],["100","101"],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\App.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Register.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Login.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Home.js",["102","103","104","105","106"],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\AppHeader.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\PostProvider.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\CategoryBrowser.js",["107"],"import React, { useEffect, useContext } from \"react\";\r\n\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\nimport './CategoryBrowser.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nexport const CategoryBrowser = () => {\r\n    const { departments, getAllDepartments } = useContext(ExhibitContext);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getAllDepartments()\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"departments-container view-container\">\r\n            {departments.map((department) => {\r\n                return (\r\n                    <div className=\"department-card\"\r\n                        key={department.departmentId}\r\n                        onClick={() => {\r\n                            history.push(`/departmentfeed/${department.departmentId}`)\r\n                        }}>\r\n                        {department.displayName}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryBrowser;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\ExhibitProvider.js",["108","109","110"],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\DepartmentFeed.js",["111"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\nimport { useParams } from 'react-router-dom';\r\nimport ExhibitCard from \"../components/ExhibitCard\"\r\nimport \"./DepartmentFeed.css\"\r\n\r\nconst DepartmentFeed = () => {\r\n    const { getExhibitsByDepartment, exhibits } = useContext(ExhibitContext);\r\n    const { departmentId } = useParams();\r\n    const [toggle, setToggle] = useState(0);\r\n\r\n    useEffect(() => {\r\n        getExhibitsByDepartment(departmentId)\r\n    }, [toggle]);\r\n\r\n    return (\r\n        <div className=\"view-container\">\r\n            <div className=\"department-feed-more-button\" onClick={() => setToggle(toggle + 1)}>More In This Category</div>\r\n            {\r\n\r\n                exhibits.map((exhibitObj) => {\r\n                    return (\r\n                        <ExhibitCard key={exhibitObj.objectID} exhibit={exhibitObj} />\r\n                    )\r\n                })\r\n            }\r\n            <div className=\"department-feed-more-button\" onClick={() => setToggle(toggle + 1)}>More In This Category</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DepartmentFeed;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ExhibitCard.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\MyExhibits.js",["112"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\nimport MyExhibitCard from \"../components/MyExhibitCard\"\r\nimport \"./MyExhibits.css\"\r\n\r\nconst MyExhibits = () => {\r\n    const { posts, getPostsByUser, deletePost, postWasEdited } = useContext(PostContext);\r\n    const { exhibits, getPostExhibits } = useContext(ExhibitContext);\r\n    const userId = JSON.parse(localStorage.getItem('userProfile')).id;\r\n    const [toggle, setToggle] = useState(0);\r\n\r\n    useEffect(() => {\r\n        getPostsByUser(userId)\r\n            .then((postResponse) => {\r\n                getPostExhibits(postResponse)\r\n            })\r\n    }, [toggle, postWasEdited]);\r\n\r\n    const removePost = (objectID) => {\r\n        const linkedPost = posts.find((post) => {\r\n            return post.metId === objectID\r\n        })\r\n        deletePost(linkedPost.id)\r\n            .then(() => setToggle(toggle + 1))\r\n    }\r\n\r\n    return (\r\n        <div className=\"view-container\">\r\n            {exhibits.map((exhibit) => {\r\n                return (\r\n                    <div key={exhibit.objectID} className=\"my-exhibits-container\">\r\n                        <div>\r\n                            <div className=\"delete-post-button\" onClick={() => removePost(exhibit.objectID)}>Delete Post</div>\r\n                        </div>\r\n                        <MyExhibitCard exhibit={exhibit} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyExhibits;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\CommentProvider.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\MyExhibitCard.js",["113"],"import React, { useContext, useState, useEffect } from \"react\";\r\nimport { CommentContext } from \"../providers/CommentProvider\"\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport { CommentEditButton } from \"./CommentEditor\"\r\nimport \"./ExhibitCard.css\"\r\nimport PostEditor from \"./PostEditor\"\r\n\r\nconst MyExhibitCard = ({ exhibit }) => {\r\n    const { posts } = useContext(PostContext);\r\n    const { addComment, getCommentsByPost, deleteComment } = useContext(CommentContext);\r\n    const [comments, setComments] = useState([]);\r\n    const [toggle, setToggle] = useState(0)\r\n    const userId = JSON.parse(localStorage.getItem('userProfile')).id;\r\n\r\n    useEffect(() => {\r\n        commentsFinder()\r\n    }, [toggle]);\r\n\r\n    const PostFinder = (objectID) => {\r\n        const linkedPost = posts.find((post) => {\r\n            return post.metId === objectID.objectID\r\n        })\r\n        return <PostEditor post={linkedPost} />\r\n    }\r\n\r\n    const InitialComment = (objectID) => {\r\n        const linkedContent = posts.find((post) => {\r\n            return post.metId === objectID.objectID\r\n        })\r\n        if (linkedContent === undefined) {\r\n            return null\r\n        }\r\n        return (\r\n            <div className=\"initial-comment\">\r\n                <div>{linkedContent.content}</div>\r\n                <div>{linkedContent.postAuthor} - {linkedContent.dateCreated}</div>\r\n                <PostFinder objectID={exhibit.objectID} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const commentsFinder = () => {\r\n        const linkedContent = posts.find((post) => {\r\n            return post.metId === exhibit.objectID\r\n        })\r\n        getCommentsByPost(linkedContent.id)\r\n            .then((resp) => {\r\n                setComments(resp)\r\n                return resp\r\n            })\r\n    }\r\n\r\n    // New Comment Code\r\n    let newComment = {}\r\n\r\n    const handleContentUpdate = (event) => {\r\n        newComment[event.target.name] = event.target.value\r\n    }\r\n\r\n    const commentCreator = (objectID) => {\r\n        const linkedContent = posts.find((post) => {\r\n            return post.metId === objectID.objectID\r\n        })\r\n        newComment.postId = linkedContent.id\r\n        addComment(newComment)\r\n            .then(setToggle(toggle + 1))\r\n    }\r\n\r\n    const CommentContainer = (objectID) => {\r\n        return (\r\n            <section className=\"new-comment-container\">\r\n                <input className=\"comment-input\" type=\"text\" name=\"content\" onChange={handleContentUpdate} />\r\n                <div className=\"submit-new-comment-button\" onClick={() => commentCreator(objectID)}>Submit Comment</div>\r\n            </section>\r\n        )\r\n    }\r\n\r\n    // Delete Comment Code\r\n    const removeComment = (id) => {\r\n        deleteComment(id)\r\n            .then(setToggle(toggle + 1))\r\n    }\r\n\r\n    const DeleteButton = (comment) => {\r\n        if (comment.comment.userProfileId === userId) {\r\n            return (\r\n                <div className=\"comment-delete-button\" onClick={() => {\r\n                    removeComment(comment.comment.id)\r\n                }}>\r\n                    ❌\r\n                </div>\r\n            )\r\n        }\r\n        else {\r\n            return null\r\n        }\r\n    }\r\n\r\n    return (<>\r\n        <div className=\"exhibit-card-container\">\r\n            <div className=\"exhibit-card\">\r\n                <div>\r\n                    <h3> {exhibit.title} </h3>\r\n                </div>\r\n                <img src={exhibit.primaryImage} className=\"exhibit-card-image\" alt=\"exhibit representation\" />\r\n                <div className=\"exhibit-card-details\">\r\n                    Artist: {exhibit.artistDisplayName} <br />\r\n                    {exhibit.artistDisplayBio} <br />\r\n                    <hr />\r\n\r\n                    Department: {exhibit.department} <br />\r\n                    Dimensions: {exhibit.dimensions} <br />\r\n                    Medium: {exhibit.medium} <br />\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div className=\"comment-container\">\r\n            <InitialComment objectID={exhibit.objectID} />\r\n            {comments.map((comment) => {\r\n                return <div key={comment.id} className=\"initial-comment\">\r\n                    <div>{comment.content}</div>\r\n                    <div></div>\r\n                    <div>{comment.commentAuthor} - {comment.dateCreated}</div>\r\n                    <div className=\"myexhibits-comment-controls\">\r\n                        <DeleteButton comment={comment} />\r\n                        <CommentEditButton comment={comment} />\r\n                    </div>\r\n                </div>\r\n            })}\r\n        </div>\r\n        <CommentContainer objectID={exhibit.objectID} />\r\n    </>\r\n    );\r\n};\r\n\r\nexport default MyExhibitCard;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\FriendManager.js",["114"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { FriendshipContext } from \"../providers/FriendshipProvider\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport \"./FriendManager.css\"\r\n\r\nconst FriendManager = () => {\r\n    const { getAllUserProfiles, users } = useContext(UserProfileContext);\r\n    const { addFriendship, getUserFriends, friends, deleteFriendship } = useContext(FriendshipContext);\r\n    const userId = JSON.parse(localStorage.getItem('userProfile')).id;\r\n    const [toggler, setToggler] = useState(0)\r\n    useEffect(() => {\r\n        getUserFriends(userId)\r\n        getAllUserProfiles()\r\n    }, [toggler]);\r\n\r\n    const createFriendship = (id) => {\r\n        const newFriend = {\r\n            approverId: id,\r\n            isApproved: 1\r\n        }\r\n        addFriendship(newFriend)\r\n        const toggle = toggler + 1\r\n        setToggler(toggle)\r\n    }\r\n\r\n    const removeFriend = (id) => {\r\n        deleteFriendship(id)\r\n        const toggle = toggler + 1\r\n        setToggler(toggle)\r\n\r\n    }\r\n\r\n    const AddFriendButton = (user) => {\r\n        for (const buddy of friends) {\r\n            if (buddy.approverId === user.user.id || buddy.initiatorId === user.user.id) {\r\n                return (\r\n                    <div className=\"add-friend-button\"\r\n                        onClick={() => {\r\n                            removeFriend(buddy.id)\r\n                        }}>\r\n                        ❌\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"add-friend-button\"\r\n                onClick={() => {\r\n                    createFriendship(user.user.id)\r\n                }}>\r\n                ➕\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"view-container\">\r\n            <h2>Users</h2>\r\n            <div className=\"user-card-container\">\r\n                {users.map((user) => {\r\n                    if (user.id === userId) {\r\n                        return null\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div className=\"userprofile-card\" key={user.id}>\r\n                                <div>{user.firstName} {user.lastName}</div>\r\n                                <div>{user.userName}</div>\r\n                                <AddFriendButton user={user} />\r\n                            </div>\r\n                        )\r\n                    }\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FriendManager;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\FriendshipProvider.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\MyFeed.js",["115"],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\FeedExhibitCard.js",["116"],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\CommentEditor.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\PostEditor.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":1,"column":17,"nodeType":"123","messageId":"124","endLine":1,"endColumn":25},{"ruleId":"121","severity":1,"message":"125","line":8,"column":13,"nodeType":"123","messageId":"124","endLine":8,"endColumn":20},{"ruleId":"121","severity":1,"message":"126","line":8,"column":22,"nodeType":"123","messageId":"124","endLine":8,"endColumn":27},{"ruleId":"121","severity":1,"message":"127","line":8,"column":29,"nodeType":"123","messageId":"124","endLine":8,"endColumn":37},{"ruleId":"121","severity":1,"message":"128","line":9,"column":44,"nodeType":"123","messageId":"124","endLine":9,"endColumn":55},{"ruleId":"129","severity":1,"message":"130","line":14,"column":8,"nodeType":"131","endLine":14,"endColumn":10,"suggestions":"132"},{"ruleId":"133","severity":1,"message":"134","line":44,"column":40,"nodeType":"135","messageId":"136","endLine":44,"endColumn":42},{"ruleId":"133","severity":1,"message":"134","line":67,"column":40,"nodeType":"135","messageId":"136","endLine":67,"endColumn":42},{"ruleId":"133","severity":1,"message":"134","line":82,"column":26,"nodeType":"135","messageId":"136","endLine":82,"endColumn":28},{"ruleId":"129","severity":1,"message":"137","line":14,"column":8,"nodeType":"131","endLine":14,"endColumn":16,"suggestions":"138"},{"ruleId":"129","severity":1,"message":"139","line":18,"column":8,"nodeType":"131","endLine":18,"endColumn":31,"suggestions":"140"},{"ruleId":"129","severity":1,"message":"141","line":17,"column":8,"nodeType":"131","endLine":17,"endColumn":16,"suggestions":"142"},{"ruleId":"129","severity":1,"message":"143","line":14,"column":8,"nodeType":"131","endLine":14,"endColumn":17,"suggestions":"144"},{"ruleId":"129","severity":1,"message":"145","line":16,"column":8,"nodeType":"131","endLine":16,"endColumn":10,"suggestions":"146"},{"ruleId":"129","severity":1,"message":"141","line":19,"column":8,"nodeType":"131","endLine":19,"endColumn":16,"suggestions":"147"},"no-native-reassign",["148"],"no-negated-in-lhs",["149"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'addPost' is assigned a value but never used.","'posts' is assigned a value but never used.","'setPosts' is assigned a value but never used.","'setExhibits' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllDepartments'. Either include it or remove the dependency array.","ArrayExpression",["150"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'departmentId' and 'getExhibitsByDepartment'. Either include them or remove the dependency array.",["151"],"React Hook useEffect has missing dependencies: 'getPostExhibits', 'getPostsByUser', and 'userId'. Either include them or remove the dependency array.",["152"],"React Hook useEffect has a missing dependency: 'commentsFinder'. Either include it or remove the dependency array.",["153"],"React Hook useEffect has missing dependencies: 'getAllUserProfiles', 'getUserFriends', and 'userId'. Either include them or remove the dependency array.",["154"],"React Hook useEffect has missing dependencies: 'getFriendsPosts', 'getPostExhibits', and 'userId'. Either include them or remove the dependency array.",["155"],["156"],"no-global-assign","no-unsafe-negation",{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"163","fix":"169"},"Update the dependencies array to be: [getAllDepartments]",{"range":"170","text":"171"},"Update the dependencies array to be: [departmentId, getExhibitsByDepartment, toggle]",{"range":"172","text":"173"},"Update the dependencies array to be: [toggle, postWasEdited, getPostsByUser, userId, getPostExhibits]",{"range":"174","text":"175"},"Update the dependencies array to be: [commentsFinder, toggle]",{"range":"176","text":"177"},"Update the dependencies array to be: [getAllUserProfiles, getUserFriends, toggler, userId]",{"range":"178","text":"179"},"Update the dependencies array to be: [getFriendsPosts, getPostExhibits, userId]",{"range":"180","text":"181"},{"range":"182","text":"177"},[418,420],"[getAllDepartments]",[541,549],"[departmentId, getExhibitsByDepartment, toggle]",[747,770],"[toggle, postWasEdited, getPostsByUser, userId, getPostExhibits]",[714,722],"[commentsFinder, toggle]",[661,670],"[getAllUserProfiles, getUserFriends, toggler, userId]",[614,616],"[getFriendsPosts, getPostExhibits, userId]",[813,821]]