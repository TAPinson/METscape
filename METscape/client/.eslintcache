[{"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\index.js":"1","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\App.js":"2","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\UserProfileProvider.js":"5","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Register.js":"6","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Login.js":"7","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Home.js":"8","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\AppHeader.js":"9","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\PostProvider.js":"10","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\CategoryBrowser.js":"11","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\ExhibitProvider.js":"12","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\DepartmentFeed.js":"13","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ExhibitCard.js":"14","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\MyExhibits.js":"15","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\CommentProvider.js":"16","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\MyExhibitCard.js":"17","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\FriendManager.js":"18","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\FriendshipProvider.js":"19","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\MyFeed.js":"20","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\FeedExhibitCard.js":"21","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\CommentEditor.js":"22"},{"size":690,"mtime":1611936739824,"results":"23","hashOfConfig":"24"},{"size":1035,"mtime":1612380137029,"results":"25","hashOfConfig":"24"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"24"},{"size":3085,"mtime":1612471074415,"results":"27","hashOfConfig":"24"},{"size":5979,"mtime":1612387385470,"results":"28","hashOfConfig":"24"},{"size":6717,"mtime":1611956409876,"results":"29","hashOfConfig":"24"},{"size":2624,"mtime":1611943693723,"results":"30","hashOfConfig":"24"},{"size":616,"mtime":1612464499371,"results":"31","hashOfConfig":"24"},{"size":3679,"mtime":1612192619278,"results":"32","hashOfConfig":"24"},{"size":2318,"mtime":1612546868404,"results":"33","hashOfConfig":"24"},{"size":1034,"mtime":1612464431817,"results":"34","hashOfConfig":"24"},{"size":2738,"mtime":1612494352171,"results":"35","hashOfConfig":"24"},{"size":822,"mtime":1612464471564,"results":"36","hashOfConfig":"24"},{"size":2250,"mtime":1612464185750,"results":"37","hashOfConfig":"24"},{"size":1895,"mtime":1612548961789,"results":"38","hashOfConfig":"24"},{"size":1888,"mtime":1612726735711,"results":"39","hashOfConfig":"24"},{"size":4238,"mtime":1612726645148,"results":"40","hashOfConfig":"24"},{"size":2551,"mtime":1612549247158,"results":"41","hashOfConfig":"24"},{"size":1512,"mtime":1612544569181,"results":"42","hashOfConfig":"24"},{"size":1245,"mtime":1612547670402,"results":"43","hashOfConfig":"24"},{"size":5501,"mtime":1612725114901,"results":"44","hashOfConfig":"24"},{"size":2037,"mtime":1612726772451,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"hsmdj7",{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"48"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"48"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"48"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"48"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"48"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"48"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"48"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"96","messages":"97","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\index.js",[],["98","99"],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\App.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Register.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Login.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Home.js",["100"],"import React, { useEffect, useContext } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\n\r\nconst Home = () => {\r\n    const { getPostById, post } = useContext(PostContext);\r\n    const { getExhibitById, exhibit } = useContext(ExhibitContext);\r\n\r\n    useEffect(() => {\r\n        getPostById(2)\r\n        getExhibitById(436050)\r\n    }, []);\r\n\r\n    return (\r\n        <div >\r\n            {post.title} <br />\r\n            <img src={exhibit.primaryImage} alt=\"exhibit representation\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\AppHeader.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\PostProvider.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\CategoryBrowser.js",["101"],"import React, { useEffect, useContext } from \"react\";\r\n\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\nimport './CategoryBrowser.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nexport const CategoryBrowser = () => {\r\n    const { departments, getAllDepartments } = useContext(ExhibitContext);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getAllDepartments()\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"departments-container\">\r\n            {departments.map((department) => {\r\n                return (\r\n                    <div className=\"department-card\"\r\n                        key={department.departmentId}\r\n                        onClick={() => {\r\n                            history.push(`/departmentfeed/${department.departmentId}`)\r\n                        }}>\r\n                        {department.displayName} - {department.departmentId}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryBrowser;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\ExhibitProvider.js",["102","103"],"import React, { useState, createContext } from \"react\";\r\n\r\n\r\nexport const ExhibitContext = createContext();\r\n\r\nexport function ExhibitProvider(props) {\r\n\r\n    const singleExhibitUrl = \"https://collectionapi.metmuseum.org/public/collection/v1/objects\";\r\n\r\n    const [exhibit, setExhibit] = useState([]);\r\n    const [exhibits, setExhibits] = useState([]);\r\n    const [departments, setDepartments] = useState([]);\r\n    const [department, setDepartment] = useState([]);\r\n\r\n    const getExhibitById = (id) => {\r\n        fetch(`${singleExhibitUrl}/${id}`)\r\n            .then((res) => res.json())\r\n            .then((resp) => setExhibit(resp))\r\n    }\r\n\r\n    const exhibitsCompiler = (id) => {\r\n        return fetch(`${singleExhibitUrl}/${id}`)\r\n            .then((res) => res.json())\r\n    }\r\n\r\n\r\n    const getAllDepartments = () => {\r\n        fetch(`https://collectionapi.metmuseum.org/public/collection/v1/departments`)\r\n            .then((res) => res.json())\r\n            .then((resp) => setDepartments(resp.departments))\r\n    }\r\n\r\n    const getExhibitsByDepartment = (id) => {\r\n        fetch(`https:/collectionapi.metmuseum.org/public/collection/v1/objects?departmentIds=${id}`)\r\n            .then((res) => res.json())\r\n            .then((resp) => {\r\n                let getTwenty = resp.objectIDs.slice(0, 20)\r\n                let retrievedObjects = []\r\n                setExhibits([])\r\n                getTwenty.map((metObj) => {\r\n                    exhibitsCompiler(metObj)\r\n                        .then((resp) => {\r\n                            if (!retrievedObjects.includes(resp)) {\r\n                                retrievedObjects.push(resp)\r\n                                setExhibits([...retrievedObjects])\r\n                            }\r\n                        })\r\n                })\r\n            })\r\n    }\r\n\r\n    const getPostExhibits = (posts) => {\r\n        let retrievedObjects = []\r\n        posts.map((post) => {\r\n            exhibitsCompiler(post.metId)\r\n                .then((resp) => {\r\n                    retrievedObjects.push(resp)\r\n                    setExhibits([...retrievedObjects])\r\n                })\r\n        })\r\n    }\r\n\r\n    return (\r\n        <ExhibitContext.Provider\r\n            value={{\r\n                exhibit,\r\n                setExhibit,\r\n                getExhibitById,\r\n                getAllDepartments,\r\n                departments,\r\n                setDepartments,\r\n                department,\r\n                setDepartment,\r\n                getExhibitsByDepartment,\r\n                exhibits,\r\n                setExhibits,\r\n                exhibitsCompiler,\r\n                getPostExhibits\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ExhibitContext.Provider>\r\n    );\r\n}","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\DepartmentFeed.js",["104"],"import React, { useEffect, useContext } from \"react\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\nimport { useParams } from 'react-router-dom';\r\nimport ExhibitCard from \"../components/ExhibitCard\"\r\nimport \"./DepartmentFeed.css\"\r\n\r\nconst DepartmentFeed = () => {\r\n    const { getExhibitsByDepartment, exhibits } = useContext(ExhibitContext);\r\n    const { departmentId } = useParams();\r\n\r\n    useEffect(() => {\r\n        getExhibitsByDepartment(departmentId)\r\n    }, []);\r\n\r\n    return (\r\n        <div >\r\n            {\r\n                exhibits.map((exhibitObj) => {\r\n                    return (\r\n                        <ExhibitCard key={exhibitObj.objectID} exhibit={exhibitObj} />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DepartmentFeed;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ExhibitCard.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\MyExhibits.js",["105"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\nimport MyExhibitCard from \"../components/MyExhibitCard\"\r\nimport \"./MyExhibits.css\"\r\n\r\nconst MyExhibits = () => {\r\n    const { posts, getPostsByUser, deletePost } = useContext(PostContext);\r\n    const { exhibits, getPostExhibits } = useContext(ExhibitContext);\r\n    const [toggle, setToggle] = useState(0)\r\n    const userId = JSON.parse(localStorage.getItem('userProfile')).id;\r\n\r\n    useEffect(() => {\r\n        getPostsByUser(userId)\r\n            .then((postResponse) => {\r\n                getPostExhibits(postResponse)\r\n            })\r\n    }, [toggle]);\r\n\r\n    const PostTitle = (objectID) => {\r\n        const linkedTitle = posts.find((post) => {\r\n            return post.metId === objectID.objectID\r\n        })\r\n        if (linkedTitle === undefined) {\r\n            return null\r\n        }\r\n        return linkedTitle.title\r\n    }\r\n\r\n    const removePost = (objectID) => {\r\n        const linkedPost = posts.find((post) => {\r\n            return post.metId === objectID\r\n        })\r\n        deletePost(linkedPost.id)\r\n            .then(() => setToggle(toggle + 1))\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            {exhibits.map((exhibit) => {\r\n                return (\r\n                    <div key={exhibit.objectID} className=\"my-exhibits-container\">\r\n                        <div>\r\n                            <h2><PostTitle objectID={exhibit.objectID} /></h2>\r\n                            <div className=\"delete-post-button\" onClick={() => removePost(exhibit.objectID)}>DELETE POST</div>\r\n                        </div>\r\n                        <MyExhibitCard exhibit={exhibit} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyExhibits;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\CommentProvider.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\MyExhibitCard.js",["106","107","108","109","110"],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\FriendManager.js",["111"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { FriendshipContext } from \"../providers/FriendshipProvider\";\r\nimport { UserProfileContext } from \"../providers/UserProfileProvider\";\r\nimport \"./FriendManager.css\"\r\n\r\nconst FriendManager = () => {\r\n    const { getAllUserProfiles, users } = useContext(UserProfileContext);\r\n    const { addFriendship, getUserFriends, friends, deleteFriendship } = useContext(FriendshipContext);\r\n    const userId = JSON.parse(localStorage.getItem('userProfile')).id;\r\n    const [toggler, setToggler] = useState(0)\r\n    useEffect(() => {\r\n        getUserFriends(userId)\r\n        getAllUserProfiles()\r\n    }, [toggler]);\r\n\r\n    const createFriendship = (id) => {\r\n        const newFriend = {\r\n            approverId: id,\r\n            isApproved: 1\r\n        }\r\n        addFriendship(newFriend)\r\n        const toggle = toggler + 1\r\n        setToggler(toggle)\r\n    }\r\n\r\n    const removeFriend = (id) => {\r\n        deleteFriendship(id)\r\n        const toggle = toggler + 1\r\n        setToggler(toggle)\r\n\r\n    }\r\n\r\n    const AddFriendButton = (user) => {\r\n        for (const buddy of friends) {\r\n            if (buddy.approverId === user.user.id || buddy.initiatorId === user.user.id) {\r\n                return (\r\n                    <div className=\"add-friend-button\"\r\n                        onClick={() => {\r\n                            removeFriend(buddy.id)\r\n                        }}>\r\n                        ❌\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"add-friend-button\"\r\n                onClick={() => {\r\n                    createFriendship(user.user.id)\r\n                }}>\r\n                ➕\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Users</h2>\r\n            <div className=\"user-card-container\">\r\n                {users.map((user) => {\r\n                    if (user.id === userId) {\r\n                        return null\r\n                    }\r\n                    else {\r\n                        return (\r\n                            <div className=\"userprofile-card\" key={user.id}>\r\n                                <div>{user.firstName} {user.lastName}</div>\r\n                                <div>{user.userName}</div>\r\n                                <AddFriendButton user={user} />\r\n                            </div>\r\n                        )\r\n                    }\r\n                })}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FriendManager;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\FriendshipProvider.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\MyFeed.js",["112","113"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\nimport FeedExhibitCard from \"../components/FeedExhibitCard\"\r\n\r\nconst MyFeed = () => {\r\n    const userId = JSON.parse(localStorage.getItem('userProfile')).id;\r\n    const { posts, getFriendsPosts } = useContext(PostContext);\r\n    const { exhibits, getPostExhibits } = useContext(ExhibitContext);\r\n\r\n\r\n    useEffect(() => {\r\n        getFriendsPosts(userId)\r\n            .then((resp) => getPostExhibits(resp))\r\n    }, []);\r\n\r\n    const PostTitle = (objectID) => {\r\n        const linkedTitle = posts.find((post) => {\r\n            return post.metId === objectID.objectID\r\n        })\r\n        return linkedTitle.title\r\n    }\r\n\r\n    return (\r\n        <div >\r\n            {exhibits.map((exhibit) => {\r\n                return (\r\n                    <div key={exhibit.objectID} className=\"my-exhibits-container\">\r\n                        <h2><PostTitle objectID={exhibit.objectID} /></h2>\r\n                        <FeedExhibitCard exhibit={exhibit} />\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyFeed;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\FeedExhibitCard.js",["114","115","116","117"],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\CommentEditor.js",["118","119","120","121","122","123"],{"ruleId":"124","replacedBy":"125"},{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":12,"column":8,"nodeType":"130","endLine":12,"endColumn":10,"suggestions":"131"},{"ruleId":"128","severity":1,"message":"132","line":14,"column":8,"nodeType":"130","endLine":14,"endColumn":10,"suggestions":"133"},{"ruleId":"134","severity":1,"message":"135","line":40,"column":40,"nodeType":"136","messageId":"137","endLine":40,"endColumn":42},{"ruleId":"134","severity":1,"message":"135","line":54,"column":26,"nodeType":"136","messageId":"137","endLine":54,"endColumn":28},{"ruleId":"128","severity":1,"message":"138","line":13,"column":8,"nodeType":"130","endLine":13,"endColumn":10,"suggestions":"139"},{"ruleId":"128","severity":1,"message":"140","line":18,"column":8,"nodeType":"130","endLine":18,"endColumn":16,"suggestions":"141"},{"ruleId":"142","severity":1,"message":"143","line":9,"column":20,"nodeType":"144","messageId":"145","endLine":9,"endColumn":34},{"ruleId":"142","severity":1,"message":"146","line":10,"column":59,"nodeType":"144","messageId":"145","endLine":10,"endColumn":72},{"ruleId":"142","severity":1,"message":"147","line":15,"column":12,"nodeType":"144","messageId":"145","endLine":15,"endColumn":23},{"ruleId":"142","severity":1,"message":"148","line":15,"column":25,"nodeType":"144","messageId":"145","endLine":15,"endColumn":39},{"ruleId":"128","severity":1,"message":"149","line":20,"column":8,"nodeType":"130","endLine":20,"endColumn":16,"suggestions":"150"},{"ruleId":"128","severity":1,"message":"151","line":14,"column":8,"nodeType":"130","endLine":14,"endColumn":17,"suggestions":"152"},{"ruleId":"142","severity":1,"message":"153","line":1,"column":40,"nodeType":"144","messageId":"145","endLine":1,"endColumn":48},{"ruleId":"128","severity":1,"message":"154","line":15,"column":8,"nodeType":"130","endLine":15,"endColumn":10,"suggestions":"155"},{"ruleId":"142","severity":1,"message":"146","line":10,"column":59,"nodeType":"144","messageId":"145","endLine":10,"endColumn":72},{"ruleId":"142","severity":1,"message":"156","line":15,"column":12,"nodeType":"144","messageId":"145","endLine":15,"endColumn":24},{"ruleId":"142","severity":1,"message":"157","line":15,"column":26,"nodeType":"144","messageId":"145","endLine":15,"endColumn":41},{"ruleId":"128","severity":1,"message":"149","line":20,"column":8,"nodeType":"130","endLine":20,"endColumn":16,"suggestions":"158"},{"ruleId":"142","severity":1,"message":"159","line":1,"column":39,"nodeType":"144","messageId":"145","endLine":1,"endColumn":48},{"ruleId":"142","severity":1,"message":"160","line":6,"column":13,"nodeType":"144","messageId":"145","endLine":6,"endColumn":23},{"ruleId":"142","severity":1,"message":"161","line":6,"column":25,"nodeType":"144","messageId":"145","endLine":6,"endColumn":42},{"ruleId":"142","severity":1,"message":"162","line":6,"column":44,"nodeType":"144","messageId":"145","endLine":6,"endColumn":57},{"ruleId":"142","severity":1,"message":"163","line":6,"column":74,"nodeType":"144","messageId":"145","endLine":6,"endColumn":80},{"ruleId":"142","severity":1,"message":"164","line":6,"column":82,"nodeType":"144","messageId":"145","endLine":6,"endColumn":91},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getExhibitById' and 'getPostById'. Either include them or remove the dependency array.","ArrayExpression",["167"],"React Hook useEffect has a missing dependency: 'getAllDepartments'. Either include it or remove the dependency array.",["168"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has missing dependencies: 'departmentId' and 'getExhibitsByDepartment'. Either include them or remove the dependency array.",["169"],"React Hook useEffect has missing dependencies: 'getPostExhibits', 'getPostsByUser', and 'userId'. Either include them or remove the dependency array.",["170"],"no-unused-vars","'getPostsByUser' is assigned a value but never used.","Identifier","unusedVar","'updateComment' is assigned a value but never used.","'modalIsOpen' is assigned a value but never used.","'setModalIsOpen' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'commentsFinder'. Either include it or remove the dependency array.",["171"],"React Hook useEffect has missing dependencies: 'getAllUserProfiles', 'getUserFriends', and 'userId'. Either include them or remove the dependency array.",["172"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'getFriendsPosts', 'getPostExhibits', and 'userId'. Either include them or remove the dependency array.",["173"],"'modalIsOpen2' is assigned a value but never used.","'setModalIsOpen2' is assigned a value but never used.",["174"],"'useEffect' is defined but never used.","'addComment' is assigned a value but never used.","'getCommentsByPost' is assigned a value but never used.","'deleteComment' is assigned a value but never used.","'toggle' is assigned a value but never used.","'setToggle' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},{"desc":"181","fix":"182"},{"desc":"183","fix":"184"},{"desc":"185","fix":"186"},{"desc":"187","fix":"188"},{"desc":"183","fix":"189"},"Update the dependencies array to be: [getExhibitById, getPostById]",{"range":"190","text":"191"},"Update the dependencies array to be: [getAllDepartments]",{"range":"192","text":"193"},"Update the dependencies array to be: [departmentId, getExhibitsByDepartment]",{"range":"194","text":"195"},"Update the dependencies array to be: [getPostExhibits, getPostsByUser, toggle, userId]",{"range":"196","text":"197"},"Update the dependencies array to be: [commentsFinder, toggle]",{"range":"198","text":"199"},"Update the dependencies array to be: [getAllUserProfiles, getUserFriends, toggler, userId]",{"range":"200","text":"201"},"Update the dependencies array to be: [getFriendsPosts, getPostExhibits, userId]",{"range":"202","text":"203"},{"range":"204","text":"199"},[418,420],"[getExhibitById, getPostById]",[418,420],"[getAllDepartments]",[485,487],"[departmentId, getExhibitsByDepartment]",[731,739],"[getPostExhibits, getPostsByUser, toggle, userId]",[803,811],"[commentsFinder, toggle]",[661,670],"[getAllUserProfiles, getUserFriends, toggler, userId]",[601,603],"[getFriendsPosts, getPostExhibits, userId]",[882,890]]