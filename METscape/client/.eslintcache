[{"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\index.js":"1","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\App.js":"2","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\reportWebVitals.js":"3","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ApplicationViews.js":"4","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\UserProfileProvider.js":"5","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Register.js":"6","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Login.js":"7","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Home.js":"8","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\AppHeader.js":"9","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\PostProvider.js":"10","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\CategoryBrowser.js":"11","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\ExhibitProvider.js":"12","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\DepartmentFeed.js":"13","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ExhibitCard.js":"14","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\MyExhibits.js":"15","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\CommentProvider.js":"16","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\MyExhibitCard.js":"17","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\FriendManager.js":"18","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\FriendshipProvider.js":"19"},{"size":690,"mtime":1611936739824,"results":"20","hashOfConfig":"21"},{"size":1035,"mtime":1612380137029,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"21"},{"size":2727,"mtime":1612451669332,"results":"24","hashOfConfig":"21"},{"size":5979,"mtime":1612387385470,"results":"25","hashOfConfig":"21"},{"size":6717,"mtime":1611956409876,"results":"26","hashOfConfig":"21"},{"size":2624,"mtime":1611943693723,"results":"27","hashOfConfig":"21"},{"size":587,"mtime":1612192084082,"results":"28","hashOfConfig":"21"},{"size":3679,"mtime":1612192619278,"results":"29","hashOfConfig":"21"},{"size":1586,"mtime":1612372630360,"results":"30","hashOfConfig":"21"},{"size":1090,"mtime":1612232999806,"results":"31","hashOfConfig":"21"},{"size":2770,"mtime":1612298697533,"results":"32","hashOfConfig":"21"},{"size":832,"mtime":1612379254598,"results":"33","hashOfConfig":"21"},{"size":2283,"mtime":1612301405337,"results":"34","hashOfConfig":"21"},{"size":2768,"mtime":1612384827819,"results":"35","hashOfConfig":"21"},{"size":1372,"mtime":1612389487727,"results":"36","hashOfConfig":"21"},{"size":871,"mtime":1612379774085,"results":"37","hashOfConfig":"21"},{"size":1895,"mtime":1612451799396,"results":"38","hashOfConfig":"21"},{"size":1002,"mtime":1612451473826,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"hsmdj7",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"42"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\index.js",[],["86","87"],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\App.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ApplicationViews.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\UserProfileProvider.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Register.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Login.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\Home.js",["88","89"],"import React, { useEffect, useContext } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\n\r\nconst Home = () => {\r\n    const { getPostById, post } = useContext(PostContext);\r\n    const { getExhibitById, exhibit } = useContext(ExhibitContext);\r\n\r\n    useEffect(() => {\r\n        getPostById(2)\r\n        getExhibitById(436050)\r\n    }, []);\r\n\r\n    return (\r\n        <div >\r\n            {post.title} <br />\r\n            <img src={exhibit.primaryImage} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\AppHeader.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\PostProvider.js",[],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\CategoryBrowser.js",["90","91"],"import React, { useEffect, useContext } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\nimport './CategoryBrowser.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nexport const CategoryBrowser = () => {\r\n    const { departments, getAllDepartments } = useContext(ExhibitContext);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        getAllDepartments()\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"departments-container\">\r\n            {departments.map((department) => {\r\n                return (\r\n                    <div className=\"department-card\"\r\n                        key={department.departmentId}\r\n                        onClick={() => {\r\n                            history.push(`/departmentfeed/${department.departmentId}`)\r\n                        }}>\r\n                        {department.displayName} - {department.departmentId}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryBrowser;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\ExhibitProvider.js",["92","93"],"import React, { useState, createContext } from \"react\";\r\n\r\n\r\nexport const ExhibitContext = createContext();\r\n\r\nexport function ExhibitProvider(props) {\r\n\r\n    const singleExhibitUrl = \"https://collectionapi.metmuseum.org/public/collection/v1/objects\";\r\n\r\n    const [exhibit, setExhibit] = useState([]);\r\n    const [exhibits, setExhibits] = useState([]);\r\n    const [departments, setDepartments] = useState([]);\r\n    const [department, setDepartment] = useState([]);\r\n\r\n    const getExhibitById = (id) => {\r\n        fetch(`${singleExhibitUrl}/${id}`)\r\n            .then((res) => res.json())\r\n            .then((resp) => setExhibit(resp))\r\n    }\r\n\r\n    const exhibitsCompiler = (id) => {\r\n        return fetch(`${singleExhibitUrl}/${id}`)\r\n            .then((res) => res.json())\r\n    }\r\n\r\n\r\n    const getAllDepartments = () => {\r\n        fetch(`https://collectionapi.metmuseum.org/public/collection/v1/departments`)\r\n            .then((res) => res.json())\r\n            .then((resp) => setDepartments(resp.departments))\r\n    }\r\n\r\n    const getExhibitsByDepartment = (id) => {\r\n        fetch(`https:/collectionapi.metmuseum.org/public/collection/v1/objects?departmentIds=${id}`)\r\n            .then((res) => res.json())\r\n            .then((resp) => {\r\n                let getTwenty = resp.objectIDs.slice(0, 20)\r\n                let retrievedObjects = []\r\n                setExhibits([])\r\n                getTwenty.map((metObj) => {\r\n                    exhibitsCompiler(metObj)\r\n                        .then((resp) => {\r\n                            if (!retrievedObjects.includes(resp)) {\r\n                                retrievedObjects.push(resp)\r\n                                setExhibits([...retrievedObjects])\r\n                            }\r\n                        })\r\n                })\r\n            })\r\n    }\r\n\r\n    const getPostExhibits = (posts) => {\r\n        //console.log(posts)\r\n        let retrievedObjects = []\r\n        posts.map((post) => {\r\n            exhibitsCompiler(post.metId)\r\n                .then((resp) => {\r\n                    retrievedObjects.push(resp)\r\n                    setExhibits([...retrievedObjects])\r\n                })\r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <ExhibitContext.Provider\r\n            value={{\r\n                exhibit,\r\n                setExhibit,\r\n                getExhibitById,\r\n                getAllDepartments,\r\n                departments,\r\n                setDepartments,\r\n                department,\r\n                setDepartment,\r\n                getExhibitsByDepartment,\r\n                exhibits,\r\n                setExhibits,\r\n                exhibitsCompiler,\r\n                getPostExhibits\r\n            }}\r\n        >\r\n            {props.children}\r\n        </ExhibitContext.Provider>\r\n    );\r\n}","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\DepartmentFeed.js",["94","95"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\nimport { useParams } from 'react-router-dom';\r\nimport ExhibitCard from \"../components/ExhibitCard\"\r\nimport \"./DepartmentFeed.css\"\r\n\r\nconst DepartmentFeed = () => {\r\n    const { getExhibitsByDepartment, exhibits } = useContext(ExhibitContext);\r\n    const { departmentId } = useParams();\r\n\r\n    useEffect(() => {\r\n        getExhibitsByDepartment(departmentId)\r\n    }, []);\r\n\r\n    return (\r\n        <div >\r\n            {\r\n                exhibits.map((exhibitObj) => {\r\n                    return (\r\n                        <ExhibitCard key={exhibitObj.objectID} exhibit={exhibitObj} />\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DepartmentFeed;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\ExhibitCard.js",["96","97","98"],"import React, { useState, createContext, useContext } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport \"./ExhibitCard.css\"\r\nimport Modal from 'react-modal'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst ExhibitCard = ({ exhibit }) => {\r\n    const { addPost } = useContext(PostContext);\r\n    const [modalIsOpen, setModalIsOpen] = useState(false)\r\n    Modal.setAppElement('#root')\r\n\r\n    let newPost = {}\r\n\r\n    const handleContentUpdate = (event) => {\r\n        newPost.metId = exhibit.objectID\r\n        newPost[event.target.id] = event.target.value\r\n    }\r\n\r\n    const postCreator = () => {\r\n        addPost(newPost)\r\n    }\r\n\r\n    return (\r\n        <div className=\"exhibit-card-container\">\r\n            <div className=\"exhibit-card\">\r\n                <h3> {exhibit.title} </h3>\r\n                <img src={exhibit.primaryImage} className=\"exhibit-card-image\" />\r\n                <div>\r\n                    From: {exhibit.country} <br />\r\n                    Department: {exhibit.department} <br />\r\n                    Dimensions: {exhibit.dimensions} <br />\r\n                    Medium: {exhibit.medium} <br />\r\n                    <div className=\"post-this-button\" onClick={() => setModalIsOpen(true)}>Post This</div>\r\n\r\n                    <Modal className=\"postModal\" isOpen={modalIsOpen} onRequestClose={() => setModalIsOpen(false)}>\r\n                        <h2>Title</h2>\r\n                        <input type=\"text\" className=\"modalInput\" id=\"title\" onChange={handleContentUpdate} />\r\n\r\n                        <h2>Post Message</h2>\r\n                        <input type=\"text\" className=\"modalInput\" id=\"content\" onChange={handleContentUpdate} />\r\n\r\n                        <button onClick={evt => {\r\n                            evt.preventDefault()\r\n                            postCreator()\r\n                            setModalIsOpen(false)\r\n                        }}>Save\r\n                                    </button>\r\n                        <div>\r\n                            <button className=\"modalClose\" onClick={() => setModalIsOpen(false)}>Close</button>\r\n                        </div>\r\n                    </Modal>\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExhibitCard;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\MyExhibits.js",["99","100"],"import React, { useEffect, useContext, useState } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport { CommentContext } from \"../providers/CommentProvider\";\r\nimport { ExhibitContext } from \"../providers/ExhibitProvider\";\r\nimport MyExhibitCard from \"../components/MyExhibitCard\"\r\nimport \"./MyExhibits.css\"\r\n\r\n\r\nconst MyExhibits = () => {\r\n    const { posts, getPostsByUser } = useContext(PostContext);\r\n    const { exhibits, getPostExhibits } = useContext(ExhibitContext);\r\n    const { addComment } = useContext(CommentContext);\r\n    const userId = JSON.parse(localStorage.getItem('userProfile')).id;\r\n\r\n    useEffect(() => {\r\n        getPostsByUser(userId)\r\n            .then((postResponse) => {\r\n                getPostExhibits(postResponse)\r\n            })\r\n    }, []);\r\n\r\n    const PostTitle = (objectID) => {\r\n        const linkedTitle = posts.find((post) => {\r\n            return post.metId === objectID.objectID\r\n        })\r\n        return linkedTitle.title\r\n    }\r\n\r\n    const InitialComment = (objectID) => {\r\n        const linkedContent = posts.find((post) => {\r\n            return post.metId === objectID.objectID\r\n        })\r\n        return (\r\n            <div className=\"initial-comment\">{linkedContent.content}</div>\r\n        )\r\n    }\r\n\r\n    let newComment = {}\r\n\r\n    const handleContentUpdate = (event) => {\r\n        newComment[event.target.name] = event.target.value\r\n        console.log(newComment)\r\n    }\r\n\r\n    const commentCreator = (objectID) => {\r\n        const linkedContent = posts.find((post) => {\r\n            return post.metId === objectID.objectID\r\n        })\r\n        newComment.postId = linkedContent.id\r\n        addComment(newComment)\r\n    }\r\n\r\n    const CommentContainer = (objectID) => {\r\n        return (\r\n            <section className=\"new-comment-container\">\r\n                <input className=\"comment-input\" type=\"text\" name=\"content\" onChange={handleContentUpdate} />\r\n                <div className=\"submit-new-comment-button\" onClick={() => commentCreator(objectID)}>Submit Comment</div>\r\n            </section>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n        <div >\r\n            {exhibits.map((exhibit) => {\r\n                return (\r\n                    <div key={exhibit.objectID} className=\"my-exhibits-container\">\r\n                        <h2><PostTitle objectID={exhibit.objectID} /></h2>\r\n                        <MyExhibitCard exhibit={exhibit} />\r\n                        <InitialComment objectID={exhibit.objectID} />\r\n                        <CommentContainer objectID={exhibit.objectID} />\r\n                        {/* <CommentModal objectID={exhibit.objectID} /> */}\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyExhibits;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\CommentProvider.js",["101"],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\components\\MyExhibitCard.js",["102","103","104","105","106","107","108"],"import React, { useState, createContext, useContext } from \"react\";\r\nimport { PostContext } from \"../providers/PostProvider\";\r\nimport \"./ExhibitCard.css\"\r\nimport Modal from 'react-modal'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst MyExhibitCard = ({ exhibit }) => {\r\n\r\n    return (\r\n        <div className=\"exhibit-card-container\">\r\n            <div className=\"exhibit-card\">\r\n                <h3> {exhibit.title} </h3>\r\n                <img src={exhibit.primaryImage} className=\"exhibit-card-image\" />\r\n                <div>\r\n                    From: {exhibit.country} <br />\r\n                    Department: {exhibit.department} <br />\r\n                    Dimensions: {exhibit.dimensions} <br />\r\n                    Medium: {exhibit.medium} <br />\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyExhibitCard;","C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\pages\\FriendManager.js",["109","110","111"],"C:\\Users\\Travis\\workspace\\METscape\\METscape\\client\\src\\providers\\FriendshipProvider.js",[],{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","severity":1,"message":"117","line":12,"column":8,"nodeType":"118","endLine":12,"endColumn":10,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":17,"column":13,"nodeType":"122","endLine":17,"endColumn":47},{"ruleId":"123","severity":1,"message":"124","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":21},{"ruleId":"116","severity":1,"message":"127","line":14,"column":8,"nodeType":"118","endLine":14,"endColumn":10,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":40,"column":40,"nodeType":"131","messageId":"132","endLine":40,"endColumn":42},{"ruleId":"129","severity":1,"message":"130","line":55,"column":26,"nodeType":"131","messageId":"132","endLine":55,"endColumn":28},{"ruleId":"123","severity":1,"message":"133","line":1,"column":40,"nodeType":"125","messageId":"126","endLine":1,"endColumn":48},{"ruleId":"116","severity":1,"message":"134","line":13,"column":8,"nodeType":"118","endLine":13,"endColumn":10,"suggestions":"135"},{"ruleId":"123","severity":1,"message":"136","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":40},{"ruleId":"123","severity":1,"message":"137","line":5,"column":10,"nodeType":"125","messageId":"126","endLine":5,"endColumn":19},{"ruleId":"120","severity":1,"message":"121","line":27,"column":17,"nodeType":"122","endLine":27,"endColumn":82},{"ruleId":"123","severity":1,"message":"133","line":1,"column":40,"nodeType":"125","messageId":"126","endLine":1,"endColumn":48},{"ruleId":"116","severity":1,"message":"138","line":20,"column":8,"nodeType":"118","endLine":20,"endColumn":10,"suggestions":"139"},{"ruleId":"123","severity":1,"message":"140","line":18,"column":11,"nodeType":"125","messageId":"126","endLine":18,"endColumn":28},{"ruleId":"123","severity":1,"message":"133","line":1,"column":17,"nodeType":"125","messageId":"126","endLine":1,"endColumn":25},{"ruleId":"123","severity":1,"message":"136","line":1,"column":27,"nodeType":"125","messageId":"126","endLine":1,"endColumn":40},{"ruleId":"123","severity":1,"message":"141","line":1,"column":42,"nodeType":"125","messageId":"126","endLine":1,"endColumn":52},{"ruleId":"123","severity":1,"message":"124","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":21},{"ruleId":"123","severity":1,"message":"142","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":13},{"ruleId":"123","severity":1,"message":"137","line":5,"column":10,"nodeType":"125","messageId":"126","endLine":5,"endColumn":19},{"ruleId":"120","severity":1,"message":"121","line":13,"column":17,"nodeType":"122","endLine":13,"endColumn":82},{"ruleId":"123","severity":1,"message":"124","line":2,"column":10,"nodeType":"125","messageId":"126","endLine":2,"endColumn":21},{"ruleId":"123","severity":1,"message":"143","line":3,"column":10,"nodeType":"125","messageId":"126","endLine":3,"endColumn":24},{"ruleId":"116","severity":1,"message":"144","line":15,"column":8,"nodeType":"118","endLine":15,"endColumn":10,"suggestions":"145"},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getExhibitById' and 'getPostById'. Either include them or remove the dependency array.","ArrayExpression",["148"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'PostContext' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'getAllDepartments'. Either include it or remove the dependency array.",["149"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'departmentId' and 'getExhibitsByDepartment'. Either include them or remove the dependency array.",["150"],"'createContext' is defined but never used.","'useParams' is defined but never used.","React Hook useEffect has missing dependencies: 'getPostExhibits', 'getPostsByUser', and 'userId'. Either include them or remove the dependency array.",["151"],"'getCommentsByPost' is assigned a value but never used.","'useContext' is defined but never used.","'Modal' is defined but never used.","'ExhibitContext' is defined but never used.","React Hook useEffect has a missing dependency: 'getAllUserProfiles'. Either include it or remove the dependency array.",["152"],"no-global-assign","no-unsafe-negation",{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},"Update the dependencies array to be: [getExhibitById, getPostById]",{"range":"163","text":"164"},"Update the dependencies array to be: [getAllDepartments]",{"range":"165","text":"166"},"Update the dependencies array to be: [departmentId, getExhibitsByDepartment]",{"range":"167","text":"168"},"Update the dependencies array to be: [getPostExhibits, getPostsByUser, userId]",{"range":"169","text":"170"},"Update the dependencies array to be: [getAllUserProfiles]",{"range":"171","text":"172"},[418,420],"[getExhibitById, getPostById]",[474,476],"[getAllDepartments]",[495,497],"[departmentId, getExhibitsByDepartment]",[796,798],"[getPostExhibits, getPostsByUser, userId]",[653,655],"[getAllUserProfiles]"]